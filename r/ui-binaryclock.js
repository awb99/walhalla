SHADOW_ENV.evalLoad("shadow.module.ui-binaryclock.prepend.js", false , "\nshadow.loader.set_load_start(\x27ui-binaryclock\x27);");
SHADOW_ENV.evalLoad("ui.binaryclock.clock.js", true , "goog.provide(\x27ui.binaryclock.clock\x27);\nui.binaryclock.clock.cell \x3d (function ui$binaryclock$clock$cell(n,bit){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div.clock-cell\x22,\x22div.clock-cell\x22,-12507663),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),((((n \x26 (1 \x3c\x3c bit)) !\x3d 0))?\x22light\x22:\x22dark\x22)], null)], null);\n});\nui.binaryclock.clock.column \x3d (function ui$binaryclock$clock$column(n){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div.clock-col\x22,\x22div.clock-col\x22,1418748813),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.cell,n,(3)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.cell,n,(2)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.cell,n,(1)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.cell,n,(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div.clock-cell\x22,\x22div.clock-cell\x22,-12507663),n], null)], null);\n});\nui.binaryclock.clock.column_pair \x3d (function ui$binaryclock$clock$column_pair(n){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div.clock-pair\x22,\x22div.clock-pair\x22,-65283468),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.column,cljs.core.quot(n,(10))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.column,cljs.core.mod(n,(10))], null)], null);\n});\nui.binaryclock.clock.legend \x3d (function ui$binaryclock$clock$legend(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___54568 \x3d arguments.length;\nvar i__5770__auto___54569 \x3d (0);\nwhile(true){\nif((i__5770__auto___54569 \x3c len__5769__auto___54568)){\nargs__5775__auto__.push((arguments[i__5770__auto___54569]));\n\nvar G__54570 \x3d (i__5770__auto___54569 + (1));\ni__5770__auto___54569 \x3d G__54570;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn ui.binaryclock.clock.legend.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(ui.binaryclock.clock.legend.cljs$core$IFn$_invoke$arity$variadic \x3d (function (items){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div.clock-col.clock-legend\x22,\x22div.clock-col.clock-legend\x22,-1934406846)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,new cljs.core.Keyword(null,\x22div.clock-cell\x22,\x22div.clock-cell\x22,-12507663)),items));\n}));\n\n(ui.binaryclock.clock.legend.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(ui.binaryclock.clock.legend.cljs$lang$applyTo \x3d (function (seq54555){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq54555));\n}));\n\nui.binaryclock.clock.clock \x3d (function ui$binaryclock$clock$clock(date,show_100s,toggle_100s){\nreturn new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div.clock-main\x22,\x22div.clock-main\x22,-402520242),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22on-click\x22,\x22on-click\x22,1632826543),toggle_100s,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),(cljs.core.truth_(show_100s)?\x22wide\x22:null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.legend,(8),(4),(2),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.column_pair,date.getHours()], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.column_pair,date.getMinutes()], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.column_pair,date.getSeconds()], null),(cljs.core.truth_(show_100s)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.column_pair,cljs.core.quot(date.getMilliseconds(),(10))], null):null)], null);\n});\nui.binaryclock.clock.clock_state \x3d reagent.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22time\x22,\x22time\x22,1385887882),(new Date()),new cljs.core.Keyword(null,\x22show-100s\x22,\x22show-100s\x22,1072817186),false], null));\nui.binaryclock.clock.update_time \x3d (function ui$binaryclock$clock$update_time(){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(ui.binaryclock.clock.clock_state,cljs.core.assoc,new cljs.core.Keyword(null,\x22time\x22,\x22time\x22,1385887882),(new Date()));\n});\n/**\n * displays a binary clock; on click with seconds.\n *   useful to debug reagent component that do not update\n */\nui.binaryclock.clock.binary_clock \x3d (function ui$binaryclock$clock$binary_clock(){\nvar map__54561 \x3d cljs.core.deref(ui.binaryclock.clock.clock_state);\nvar map__54561__$1 \x3d cljs.core.__destructure_map(map__54561);\nvar time \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54561__$1,new cljs.core.Keyword(null,\x22time\x22,\x22time\x22,1385887882));\nvar show_100s \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54561__$1,new cljs.core.Keyword(null,\x22show-100s\x22,\x22show-100s\x22,1072817186));\nif(cljs.core.truth_(show_100s)){\nreagent.core.next_tick(ui.binaryclock.clock.update_time);\n} else {\nsetTimeout(ui.binaryclock.clock.update_time,(1000));\n}\n\nreturn cljs.core.with_meta(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [ui.binaryclock.clock.clock,time,show_100s,(function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(ui.binaryclock.clock.clock_state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22show-100s\x22,\x22show-100s\x22,1072817186)], null),cljs.core.not);\n})], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22R\x22,\x22R\x22,-936662523),true], null));\n});\n");
SHADOW_ENV.evalLoad("shadow.module.ui-binaryclock.append.js", false , "\nshadow.loader.set_loaded();;\nSHADOW_ENV.setLoaded(\x22shadow.module.ui-binaryclock.prepend.js\x22);\nSHADOW_ENV.setLoaded(\x22ui.binaryclock.clock.js\x22);\nSHADOW_ENV.setLoaded(\x22shadow.module.ui-binaryclock.append.js\x22);");