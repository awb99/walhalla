{"version":3,"sources":["goldly/sci/loader/cljs_source_http.cljs"],"mappings":"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","names":["goldly.sci.loader.cljs-source-http/filename-to-url-goldly","filename","goldly.sci.loader.cljs-source-http/filename-to-url-github","base","goldly.sci.loader.static/dynamic-base","goldly.sci.loader.cljs-source-http/filename-to-url","cljs.core.atom","goldly.sci.loader.cljs-source-http/set-github-load-mode","cljs.core/reset!","p__52459","map__52460","cljs.core/--destructure-map","cljs.core.get","goldly.sci.loader.cljs-source-http/load-module-sci","ctx","libname","ns","opts","property-path","d","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","goldly.sci.loader.cljs-source/ns->filename","url","fexpr__52461","cljs.core/deref","js/Promise","resolve","reject","c__41381__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__41382__auto__","switch__41305__auto__","state_52500","state_val_52502","inst_52462","statearr-52510","statearr-52512","statearr-52514","statearr-52517","inst_52465","inst_52466","inst_52467","cljs.core/PersistentHashMap","statearr-52527","inst_52469","inst_52470","statearr-52530","cljs.core.async.impl.ioc-helpers/take!","inst_52473","inst_52474","inst_52472","inst_52475","inst_52476","inst_52477","inst_52478","statearr-52544","statearr-52549","statearr-52551","inst_52480","cljs.core/PersistentVector","inst_52481","inst_52482","inst_52483","inst_52484","inst_52485","inst_52486","inst_52487","inst_52488","inst_52489","statearr-52570","inst_52491","inst_52492","statearr-52573","inst_52494","cljs.core.async.impl.ioc-helpers/return-chan","statearr-52580","state-machine__41306__auto__","ret-value__41307__auto__","result__41308__auto__","cljs.core/keyword-identical?","ex__41309__auto__","e52582","statearr-52584","cljs.core/seq","statearr-52586","cljs.core/first","state__41383__auto__","statearr-52590","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","response","cljs_http.client.get","status","code","cljs.core._EQ_","goldly.sci.loader.cljs-source/on-cljs-received"],"sourcesContent":["(ns goldly.sci.loader.cljs-source-http\n  (:require\n   [taoensso.timbre :as timbre :refer-macros [debug debugf info warn error]]\n   [cljs.core.async :refer [<! >! chan close!] :refer-macros [go]]\n   [cljs-http.client :as http]\n   [goldly.sci.loader.cljs-source :refer [ns->filename on-cljs-received]]\n   [goldly.sci.loader.static :refer [dynamic-base]]))\n\n(defn filename-to-url-goldly [filename]\n  (str \"/code/\" filename))\n\n(defn filename-to-url-github [filename]\n  (let [base (dynamic-base)]\n    (str base \"/code/\" filename)))\n\n(def filename-to-url\n  (atom filename-to-url-goldly))\n\n(defn set-github-load-mode []\n  (reset! filename-to-url filename-to-url-github))\n\n(defn load-module-sci [{:keys [ctx libname ns opts property-path] :as d}]\n  ; libname: bongo.trott ; the ns that gets compiled\n  ; ns:  demo.notebook.applied-science-jsinterop ; the namespace that is using it\n  ; opts: {:as bongo, :refer [saying]}\n  ; ctx is the sci-context\n  (info \"load-sci-src\" \"libname:\" libname \"ns: \" ns \"opts:\" opts)\n  (let [filename (-> libname str ns->filename (str \".cljs\"))\n        url (@filename-to-url filename)]\n    (info \"loading filename: \" filename)\n    (js/Promise.\n     (fn [resolve reject]\n       (go (let [opts (or opts {:with-credentials? false})\n                 response (<! (http/get url opts))\n                 status (:status response)\n                 code (:body response)]\n             (info \"load-module-sci-cljs url: \" url \"status: \" status)\n             (if (= status 200)\n               (on-cljs-received ctx libname ns opts resolve reject [:http-load {:result {:code code}}])\n               (reject (str \"failed to load: \" libname \" status: \" status \" url: \" url)))))))))\n"]}