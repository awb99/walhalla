{"version":3,"sources":["modular/oauth2/token/ui.cljs"],"mappings":";AAMA,2DAAA,3DAACA,mLAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;AAAT,AACE,yDAAA,mFAAA,rIAACC,+CAAOF;;AAEX,yDAAA,zDAACG,+HAEA,cAAAC,HAAKJ;AAAL,AAAA,IAAAK,aAAAD;QAAA,AAAAL,4CAAAM,WAAA,IAAA,/DAASJ;SAAT,AAAAF,4CAAAM,WAAA,IAAA,hEAAWC;AAAX,AACE,AAAAC,0DAAAC,mCAAA,qDAAA,0BAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,iBAAuBH;GAAvB,OAAA,KAAA,MAAA;;AACA,6BAAA,mFAAA,zGAACI,mBAASV,oKAAqBM;;AAElC,kCAAA,lCAAMK,4EAASC;AAAf,AACE,8BAAA,mFAAA,+FAAA,zMAACC,gMAAqCD;;AAExC,0CAAA,1CAAME,4FAAiBF,SAASG;AAAhC,AAAA,0FAAA,iDAAA,mFAAA,oFAAA,mFAAA,8MAAA,mFAAA,mDAAA,2CAAA,6DAAA,hjBAGS,AAACC,eAAKJ,wJACN,4CAAK,AAAA,8FAAYG;AAJ1B,AAKqB,OAACJ,gCAAQC;GAL9B,wDAAA,8BAAA;;AASA,+CAAA,/CAAMK,sGAAsBC;AAA5B,AACE,IAAMC,IAAE,sDAAA,mFAAA,zIAACC;IACHC,gBAAc,sDAAA,mFAAA,zIAACD,+MAA8BF;IAC7CI,kBAAgB,WAAKV;AAAL,AACE,OAACE,wCAAgBF,SAAS,iBAAAW,WAAA,AAAAC,gBAAWH;AAAX,AAAA,wFAAAE,+BAAAA,/GAACX,yCAAAA,mDAAAA;;;IAC7Ca,cAAM,6CAAA,7CAACC;AAJb,AAKE,kBAAKR;AAAL,AACE,AAAAX,0DAAAC,mCAAA,qDAAA,0BAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,cAAA,AAAAe,gBAAqBL;GAArB,OAAA,KAAA,MAAA;;AACA,oBAAA,AAAAK,gBAAOL;AAAP,AACE,oBAAA,AAAAK,gBAAOC;AAAP,AACE,AAAI,kCAAA,lCAACE,sBAAOF;;AACR,uBAAA,mFAAA,wDAAA,mFAAA,sEAAA,2CAAA,tWAACZ,oaAAmDK;;AAF1D;;AADF;;AAKA,oDAAA,mFAAA,qFAAA,mFAAA,mDAAA,mBAAA,mFAAA,mDAAA,iBAAA,mFAAA,mDAAA,3oBAACU,iqBAKA,AAACC,4CAAIP,gBAAgBJ","names":["re_frame.core.reg_sub","p__52233","vec__52234","cljs.core.nth","db","_","cljs.core.get_in","re_frame.core.reg_event_db","p__52237","vec__52238","ts","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/assoc-in","modular.oauth2.token.ui/connect","provider","re-frame.core/dispatch","modular.oauth2.token.ui/provider-status","status","cljs.core/name","modular.oauth2.token.ui/provider-status-grid","providers","c","re_frame.core.subscribe","tokens-status","provider-status","G__52260","cljs.core/deref","todo?","cljs.core.atom","cljs.core/reset!","cljs.core.into","cljs.core.map"],"sourcesContent":["(ns modular.oauth2.token.ui\n  (:require\n   [taoensso.timbre :refer-macros [info error]]\n   [re-frame.core :as rf]\n   [ajax.core :as ajax]))\n\n(rf/reg-sub\n :tokens/summary\n (fn [db [_]]\n   (get-in db [:tokens/summary])))\n\n(rf/reg-event-db\n :tokens/summary\n (fn [db [_ ts]]\n   (info \"tokens/summary\" ts)\n   (assoc-in db [:tokens/summary] ts)))\n\n(defn connect [provider]\n  (rf/dispatch [:oauth2/authorize-start provider :oauth2/save-server]))\n\n(defn provider-status [provider status]\n  ;(info \"provider: \" provider \" status: \" status)\n  [:<>\n   [:div (name provider)]\n   [:div (str (:available status))]\n   [:div {:on-click #(connect provider)\n          :class \"hover:text-blue-700\"}\n    \"connect\"]])\n\n(defn provider-status-grid [providers]\n  (let [c (rf/subscribe [:ws/connected?])\n        tokens-status (rf/subscribe [:tokens/summary providers])\n        provider-status (fn [provider]\n                          (provider-status provider (provider @tokens-status)))\n        todo? (atom true)]\n    (fn [providers]\n      (info \"connected: \" @c)\n      (when @c\n        (when @todo?\n          (do (reset! todo? false)\n              (rf/dispatch [:ws/send [:tokens/summary {:providers providers}]]))))\n\n      (into\n       [:div.grid.grid-cols-3\n        [:div \"provider\"]\n        [:div \"status\"]\n        [:div \"c/d\"]]\n       (map provider-status providers)))))\n\n"],"x_google_ignoreList":[0]}