{"version":3,"sources":["goldly/sci/loader/load_shadow.cljs"],"mappings":";AAaA,gDAAA,hDAAMA,wGAAiBC;AAAvB,AACE,IAAMC,WAAS,AAAWD;AAA1B,AACE,AAAAE,0DAAAC,mCAAA,qDAAA,gCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,yBAA+BH;GAA/B,OAAA,KAAA,KAAA;;AACA,YAAAI,QACC,WAAKC,QAAQC;AAAb,AACE,IAAMC,aAAW,WAAKC;AAAL,AACE,AAAAP,0DAAAC,mCAAA,qDAAA,gCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,8BAAoCK;GAApC,OAAA,KAAA,KAAA;;AAEA,QAACH,wCAAAA,6CAAAA,PAAQG,yBAAAA;;IACtBC,SAAO,WAAKC;AAAL,AACE,AAAAT,0DAAAC,mCAAA,uDAAA,gCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,sCAA6CO;GAA7C,OAAA,KAAA,KAAA;;AACA,QAACJ,uCAAAA,4CAAAA,PAAOI,wBAAAA;;AANvB,AAOE,OAACC,+CAAUZ,SAASQ,WAAWE","names":["goldly.sci.loader.load-shadow/load-ext-shadow","loadable","all-mods","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","js/Promise","resolve","reject","on-success","mod","on-err","err","shadow.lazy.load"],"sourcesContent":["(ns goldly.sci.loader.load-shadow\n  (:require\n   [taoensso.timbre :refer [trace debug debugf info infof warn warnf error errorf]]\n   [shadow.lazy :as lazy]))\n\n; https://code.thheller.com/blog/shadow-cljs/2019/03/03/code-splitting-clojurescript.html\n; https://clojureverse.org/t/shadow-lazy-convenience-wrapper-for-shadow-loader-cljs-loader/3841\n\n; (def xy (lazy/loadable [demo.thing/x demo.other/y]))\n; (def xym (lazy/loadable {:x demo.thing/x\n;                         :y demo.other/y}))\n; (def x (lazy/loadable snippets.snip/add))\n\n(defn load-ext-shadow [loadable]\n  (let [all-mods (.-modules loadable)]\n    (info \"shadow loadable mods: \" all-mods) ; [\"cljs-pprint-frisk\"]\n    (js/Promise.\n     (fn [resolve reject]\n       (let [on-success (fn [mod]\n                          (info \"shadow module-ns did load: \" mod)\n                           ;(let [mod-js (clj->js mod)])\n                          (resolve mod))\n             on-err (fn [err]\n                      (error \"shadow-module could not be loaded: \" err)\n                      (reject err))]\n         (lazy/load loadable on-success on-err))))))\n"]}