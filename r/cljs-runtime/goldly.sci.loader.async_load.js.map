{"version":3,"sources":["goldly/sci/loader/async_load.cljs"],"mappings":";AAMA,6CAAA,qDAAAA,lGAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;QAAAA,JACoCQ;cADpC,AAAAN,4CAAAF,eAAA,rEACWI;WADX,AAAAF,4CAAAF,eAAA,lEACmBK;UADnB,AAAAH,4CAAAF,eAAA,jEACwBM;SADxB,AAAAJ,4CAAAF,eAAA,hEAC4BO;AAD5B,AAEE,IAAME,UAAQ,AAACC,8CAA4BN;AAA3C,AACE,oBAIEK;AACA,OAACE,4CAA0BL,IAAIF,QAAQC,KAAKE,GAAGE;;AALjD,AAQE,OAACG,mDAA4BJ","names":["p__54564","map__54565","cljs.core/--destructure-map","cljs.core.get","goldly.sci.loader.async-load/async-load-fn","libname","opts","ctx","ns","d","sci-mod","goldly.sci.loader.shadow-module/sci-ns-lookup","goldly.sci.loader.shadow-module/load-module","goldly.sci.loader.cljs-source-http/load-module-sci"],"sourcesContent":["(ns goldly.sci.loader.async-load\n  (:require\n   [taoensso.timbre :as timbre :refer-macros [debug debugf info warn error]]\n   [goldly.sci.loader.shadow-module :as shadow-module]\n   [goldly.sci.loader.cljs-source-http :as cljs-source]))\n\n(defn async-load-fn\n  [{:keys [libname opts ctx ns] :as d}]\n  (let [sci-mod (shadow-module/sci-ns-lookup libname)]\n    (cond\n      ;(= libname \"some_js_lib\")\n      ;(load-module-test ctx libname ns opts)\n\n      sci-mod\n      (shadow-module/load-module ctx libname opts ns sci-mod)\n\n      :else\n      (cljs-source/load-module-sci d))))\n"]}