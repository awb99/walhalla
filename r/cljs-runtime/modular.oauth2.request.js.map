{"version":3,"sources":["modular/oauth2/request.cljs"],"mappings":";AAYA,yDAAA,zDAACA,oHAEA,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaK;IAAbF,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAAmBG;eAAnB,AAAAF,4CAAAD,WAAA,IAAA,tEAAqBI;UAArB,AAAAH,4CAAAD,WAAA,IAAA,jEAA8BK;cAA9B,AAAAJ,4CAAAD,WAAA,IAAA,rEAAkCM;AAAlC,AACE,IAAMC,QAAM,kDAAA,mFAAA,rIAACC,+CAAON,8IAAWE;IACzBK,KAAG,AAAA,mGAAeF;IAClBG,IAAE,uGAAA,2CAAA,iIAAA,2CAAA,uDAAA,uDAAA,mDAAA,2DAAA,OAAA,iOAAA,iEAAA,4GAAA,gEAAA,mFAAA,lkCAACC,6MAAgB,AAACC,iDAAyBR,SAASK,0GACvCJ,2PAGa,+BAAA,2CAAA,8DAAA,xIAACQ,0SACDP,QAAQF,sPACcA;AARxD,AASE,AAAAU,0DAAAC,mCAAA,qDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,+BAAA,cAAA,vBAA4BZ,oBAAoBK,UAAUC;GAA1D,OAAA,KAAA,KAAA;;AATF,kDAAA,iEAUeA;;AAKlB,iCAAA,jCAAMO,0EAASC;AAAf,AACE,IAAAC,mBAAI,mDAAA,mFAAA,8DAAA,uDAAA,3PAACX,+CAAOU;AAAZ,AAAA,oBAAAC;AAAAA;;AACI,0DAAA,mFAAA,8DAAA,pMAACX,+CAAOU;;;AAEd,yDAAA,zDAACxB,2IAEA,WAAA0B,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAxB,4BAAAwB;SAAA,AAAAvB,4CAAAuB,eAAA,hEAAapB;IAAbqB,aAAAF;QAAA,AAAApB,4CAAAsB,WAAA,IAAA,/DAAmBpB;eAAnB,AAAAF,4CAAAsB,WAAA,IAAA,tEAAqBnB;UAArB,AAAAH,4CAAAsB,WAAA,IAAA,jEAA8BL;AAA9B,AACE,AAAAJ,0DAAAC,mCAAA,uDAAA,yBAAA,KAAA,GAAA,gDAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,gCAAwCZ,SAASc;GAAjD,OAAA,KAAA,KAAA;;AACA,2EAAA,3EAACM,kIAAwB,CAAA,uEAAA,VAAsBpB,2DAAc,AAACa,+BAAQC;;AAFxE;;AAKD,yDAAA,zDAACxB,uIAEA,WAAA+B,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAA7B,4BAAA6B;SAAA,AAAA5B,4CAAA4B,eAAA,hEAAazB;IAAb0B,aAAAF;QAAA,AAAAzB,4CAAA2B,WAAA,IAAA,/DAAmBzB;eAAnB,AAAAF,4CAAA2B,WAAA,IAAA,tEAAqBxB;AAArB,AACE,AAAAU,0DAAAC,mCAAA,uDAAA,yBAAA,KAAA,GAAA,gDAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,4BAAoCZ;GAApC,OAAA,KAAA,KAAA;;AACA,2EAAA,yDAAA,pIAACoB;;AAFH","names":["re_frame.core.reg_event_fx","p__41324","p__41325","map__41326","cljs.core/--destructure-map","cljs.core.get","vec__41327","cljs.core.nth","db","_","provider","uri","success","token","cljs.core.get_in","at","r","cljs.core.merge","modular.oauth2.provider/get-provider-auth-header","ajax.core/json-response-format","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","modular.oauth2.request/err-msg","res","or__5045__auto__","p__41352","p__41353","map__41354","vec__41355","frontend.notifications.core.add_notification","p__41365","p__41366","map__41367","vec__41368"],"sourcesContent":["(ns modular.oauth2.request\n  (:require\n   [taoensso.timbre :refer-macros [info errorf]]\n   [clojure.string :as str]\n   [ajax.core :as ajax]\n   [re-frame.core :as rf]\n   [modular.oauth2.provider :refer [get-provider-auth-header]]\n   [frontend.notifications.core :refer [add-notification]]))\n\n;'authorization: Bearer YOUR_ACCESS_TOKEN' \n;$ curl -H \"Authorization: token OAUTH-TOKEN\" https://api.github.com\n\n(rf/reg-event-fx\n :request\n (fn [{:keys [db]} [_ provider uri success]]\n   (let [token (get-in db [:token provider])\n         at (:access-token token)\n         r (merge {:headers (get-provider-auth-header provider at)}\n                  {:uri uri\n                   :method          :get\n                   :timeout         5000                     ;; optional see API docs\n                   :response-format  (ajax/json-response-format {:keywords? true}) ;; IMPORTANT!: You must provide this.\n                   :on-success      [success provider]\n                   :on-failure      [:oauth2/request-error provider]})]\n     (info \"making web request:\" provider \" token: \" at \" r: \" r)\n     {:http-xhrio r})))\n\n  ;:format (ajax/json-request-format) ;  {:keywords? false})\n  ;:response-format; {:keywords? true})\n\n(defn err-msg [res]\n  (or (get-in res [:response :error :message])\n      (get-in res [:response :message])))\n\n(rf/reg-event-fx\n :oauth2/request-error\n (fn [{:keys [db]} [_ provider res]]\n   (errorf \"oauth2 provider: %s error: %s\" provider res)\n   (add-notification :error (str \"request error \" provider \": \" (err-msg res)))\n   {}))\n\n(rf/reg-event-fx\n :oauth2/login-error\n (fn [{:keys [db]} [_ provider]]\n   (errorf \"oauth2 provider: %s error\" provider)\n   (add-notification :danger \"oauth login error (token not received)\")\n   {}))\n\n"],"x_google_ignoreList":[0]}