{"version":3,"sources":["pinkgorilla/debounce.cljs"],"mappings":";AAeA,gCAAA,hCAAMA,wEAAUC,EAAEC;AAAlB,AACE,IAAMC,IAAE,AAACC,wBAAwBH,EAAEC;AAAnC,AACE,AAAAG,0DAAAC,mCAAA,qDAAA,uBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,8BAAoCL;GAApC,OAAA,KAAA,KAAA;;AACAC","names":["pinkgorilla.debounce/debounce","f","interval","d","js/goog.functions.debounce","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay"],"sourcesContent":["(ns pinkgorilla.debounce\n  (:require\n   [goog.functions]\n   [taoensso.timbre :as timbre :refer-macros [trace debug debugf info infof warn error]])\n  (:import\n   [goog.async Debouncer]))\n\n; https://martinklepsch.org/posts/simple-debouncing-in-clojurescript.html\n\n#_(defn debounce [f interval]\n    (let [dbnc (Debouncer. f interval)]\n    ;; We use apply here to support functions of various arities\n      (fn [& args]\n        (.apply (.-fire dbnc) dbnc (to-array args)))))\n\n(defn debounce [f interval]\n  (let [d (goog.functions.debounce f interval)]\n    (info \"debonced fn with interval: \" interval)\n    d))\n\n"],"x_google_ignoreList":[0]}