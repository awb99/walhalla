{"version":3,"sources":["ui/binaryclock/clock.cljs"],"mappings":";AAIA,4BAAA,5BAAMA,gEAAMC,EAAEC;AAAd,AAAA,0FAAA,wEAAA,2CAAA,wDAC2B,2BAAA,QAAA,jCAAI,EAAUD,UAAEC;;AAI3C,8BAAA,9BAAMC,oEAAQF;AAAd,AAAA,0FAAA,uEAAA,+GAAA,YAAA,+GAAA,YAAA,+GAAA,YAAA,+GAAA,YAAA,mFAAA,5eAEID,0BAAKC,iGACLD,0BAAKC,iGACLD,0BAAKC,iGACLD,0BAAKC,yKACWA;;AAEpB,mCAAA,nCAAMG,8EAAaH;AAAnB,AAAA,0FAAA,wEAAA,8IAAA,3DAEIE,4BAAO,iBAAA,jBAACE,eAAKJ,mGACbE,4BAAO,gBAAA,hBAACG,cAAIL;;AAEhB,AAAA,8BAAA,sCAAAM,pEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,iEAAAF;;;AAAA,AAAA,CAAA,mEAAA,nEAAME,8EAAUI;AAAhB,AACE,oDAAA,mFAAA,hIAACC,0OACK,AAACC,4CAAI,iEAAA,jEAACC,gDAAQC,0FACTJ;;;AAHb,CAAA,sDAAA,tDAAMJ;;AAAN;AAAA,CAAA,gDAAA,WAAAC,3DAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAKA,6BAAA,7BAEEQ,kEAAOC,KAAKC,UAAUC;AAFxB,AAAA,0FAAA,yEAAA,2CAAA,yEAAA,0GAAA,+GAAA,IAAA,IAAA,IAAA,YAAA,4IAAA,8IAAA,vhBAG8BA,oEACH,6BAAA,AAAA,OAAA,lBAAMD,mHAC7BX,uIACAT,iCAAY,AAAWmB,2GACvBnB,iCAAY,AAAamB,6GACzBnB,iCAAY,AAAamB,0BAC1B,6BAAA,AAAA,wKAAA,nLAAMC,8FACHpB,gDAAgB,AAAkBmB,fAClB,sCAAA,tCAAClB;;AAEvB,AAAKqB,mCAAY,gDAAA,2CAAA,kEAAA,+DAAA,5NAACC,gJAAc,KAAAC;AAGhC,mCAAA,nCAAMC;AAAN,AACE,2GAAA,pGAACC,mDAAMJ,iCAAYK,qEAAY,KAAAH;;AAEjC;;;;oCAAA,pCAEEI;AAFF,AAME,IAAAC,aAAA,AAAAC,gBAAgCR;IAAhCO,iBAAA,AAAAE,4BAAAF;WAAA,AAAAG,4CAAAH,eAAA,lEAAcI;gBAAd,AAAAD,4CAAAH,eAAA,vEAAmBT;AAAnB,AACE,oBAAIA;AACF,AAACc,uBAAYT;;AACb,4CAAA,5CAACU,WAAcV;;;AAHnB,2BAAA,6HAAA,1CAKGP,2BAAMe,KAAKb;AALd,AAMI,+GAAA,mFAAA,3LAACM,mDAAMJ,iCAAYc,8KAAuBC;WAN9C,2CAAA,+CAAA","names":["ui.binaryclock.clock/cell","n","bit","ui.binaryclock.clock/column","ui.binaryclock.clock/column-pair","cljs.core/quot","cljs.core/mod","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","ui.binaryclock.clock/legend","seq54555","self__5755__auto__","cljs.core/seq","items","cljs.core.into","cljs.core.map","cljs.core.partial","cljs.core/vector","ui.binaryclock.clock/clock","date","show-100s","toggle-100s","ui.binaryclock.clock/clock-state","reagent.core.atom","js/Date","ui.binaryclock.clock/update-time","cljs.core.swap_BANG_","cljs.core/assoc","ui.binaryclock.clock/binary-clock","map__54561","cljs.core/deref","cljs.core/--destructure-map","cljs.core.get","time","reagent.core/next-tick","js/setTimeout","cljs.core/update-in","cljs.core/not"],"sourcesContent":["(ns ui.binaryclock.clock\n  (:require\n   [reagent.core :as r]))\n\n(defn cell [n bit]\n  [:div.clock-cell {:class (if (bit-test n bit)\n                             \"light\"\n                             \"dark\")}])\n\n(defn column [n]\n  [:div.clock-col\n   [cell n 3]\n   [cell n 2]\n   [cell n 1]\n   [cell n 0]\n   [:div.clock-cell n]])\n\n(defn column-pair [n]\n  [:div.clock-pair\n   [column (quot n 10)]\n   [column (mod n 10)]])\n\n(defn legend [& items]\n  (into [:div.clock-col.clock-legend]\n        (map (partial vector :div.clock-cell)\n             items)))\n\n(defn ^{:R true\n        :category :demo}\n  clock [date show-100s toggle-100s]\n  [:div.clock-main {:on-click toggle-100s\n                    :class (when show-100s \"wide\")}\n   [legend 8 4 2 1]\n   [column-pair (.getHours date)]\n   [column-pair (.getMinutes date)]\n   [column-pair (.getSeconds date)]\n   (when show-100s\n     [column-pair (-> (.getMilliseconds date)\n                      (quot 10))])])\n\n(def clock-state (r/atom {:time (js/Date.)\n                          :show-100s false}))\n\n(defn update-time []\n  (swap! clock-state assoc :time (js/Date.)))\n\n(defn ^{:R true\n        :category :demo}\n  binary-clock\n  \"displays a binary clock; on click with seconds.\n  useful to debug reagent component that do not update\"\n  []\n  (let [{:keys [time show-100s]} @clock-state]\n    (if show-100s\n      (r/next-tick update-time)\n      (js/setTimeout update-time 1000))\n    ^:R\n    [clock time show-100s\n     #(swap! clock-state update-in [:show-100s] not)]))\n\n\n\n\n"],"x_google_ignoreList":[0]}