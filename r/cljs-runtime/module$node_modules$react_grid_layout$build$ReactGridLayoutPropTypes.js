shadow$provide.module$node_modules$react_grid_layout$build$ReactGridLayoutPropTypes=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.resizeHandleType=exports.resizeHandleAxesType=exports.default=void 0;global=_interopRequireDefault(require("module$node_modules$prop_types$index"));var _react=_interopRequireDefault(require("module$node_modules$react$index"));module=
global.default.arrayOf(global.default.oneOf("s w e n sw nw se ne".split(" ")));exports.resizeHandleAxesType=module;var resizeHandleType=global.default.oneOfType([global.default.node,global.default.func]);exports.resizeHandleType=resizeHandleType;global={className:global.default.string,style:global.default.object,width:global.default.number,autoSize:global.default.bool,cols:global.default.number,draggableCancel:global.default.string,draggableHandle:global.default.string,verticalCompact:function(props){!1===
props.verticalCompact&&console.warn('`verticalCompact` on \x3cReactGridLayout\x3e is deprecated and will be removed soon. Use `compactType`: "horizontal" | "vertical" | null.')},compactType:global.default.oneOf(["vertical","horizontal"]),layout:function(props){props=props.layout;void 0!==props&&require("module$node_modules$react_grid_layout$build$utils").validateLayout(props,"layout")},margin:global.default.arrayOf(global.default.number),containerPadding:global.default.arrayOf(global.default.number),
rowHeight:global.default.number,maxRows:global.default.number,isBounded:global.default.bool,isDraggable:global.default.bool,isResizable:global.default.bool,allowOverlap:global.default.bool,preventCollision:global.default.bool,useCSSTransforms:global.default.bool,transformScale:global.default.number,isDroppable:global.default.bool,resizeHandles:module,resizeHandle:resizeHandleType,onLayoutChange:global.default.func,onDragStart:global.default.func,onDrag:global.default.func,onDragStop:global.default.func,
onResizeStart:global.default.func,onResize:global.default.func,onResizeStop:global.default.func,onDrop:global.default.func,droppingItem:global.default.shape({i:global.default.string.isRequired,w:global.default.number.isRequired,h:global.default.number.isRequired}),children:function(props,propName){var keys={};_react.default.Children.forEach(props[propName],function(child){if(null!=(null===child||void 0===child?void 0:child.key)){if(keys[child.key])throw Error('Duplicate child key "'+child.key+'" found! This will cause problems in ReactGridLayout.');
keys[child.key]=!0}})},innerRef:global.default.any};exports.default=global}
//# sourceMappingURL=module$node_modules$react_grid_layout$build$ReactGridLayoutPropTypes.js.map
