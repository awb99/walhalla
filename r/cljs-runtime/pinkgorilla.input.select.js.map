{"version":3,"sources":["pinkgorilla/input/select.cljs"],"mappings":"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","names":["pinkgorilla.input.select/css","p__54559","map__54560","cljs.core/--destructure-map","cljs.core.get","pinkgorilla.input.select/select-item","value","display","selected?","position","select","text","s","p","G__54561","cljs.core/Keyword","pinkgorilla.input.select/button-remove-selection","h","pinkgorilla.input.select/button-dropdown","dropdown?","points","p__54575","map__54576","pinkgorilla.input.select/select","items","on-change","p1__54574#","l","cljs.core/count","l1","reagent.core.atom","toggle-dropdown","cljs.core.swap_BANG_","cljs.core/not","pos-key","i","G__54585","cljs.core._EQ_","cljs.core/reset!","unselect","no-op","p__54591","map__54592","cljs.core/deref","class","or__5045__auto__","cljs.core.doall","cljs.core.map_indexed","v","pinkgorilla.input.select/go-next","list","action","new-index","new-value","cljs.core.nth","pinkgorilla.input.select/go-prior","p__54599","map__54600","pinkgorilla.input.select/select-nav","nav?","opts","cljs.core.merge","pinkgorilla.input.button/button"],"sourcesContent":["(ns pinkgorilla.input.select\n  (:require\n   [reagent.core :as r]\n   [pinkgorilla.input.button :refer [button]]))\n\n(defn css []\n  [:style \".top-100 {top: 100%}\n           .bottom-100 {bottom: 100%}\n           .max-h-select {\n              max-height: 300px;\n           }\n          \"])\n\n(defn- select-item [{:keys [value display selected? position select]}]\n  (let [text (if display (display value) value)\n        s (when selected? \"bg-red-500 border-teal-600\")\n        p (case position\n            :first   \"rounded-t\"\n            :last    \"rounded-b\"\n            \"\")]\n    [:div {:class (str \"cursor-pointer w-full border-gray-100 border-b hover:bg-blue-300 \" p)}\n     [:div {:on-click #(select value)\n            :class (str \"flex w-full items-center p-2 pl-2 border-transparent border-l-2 relative hover:bg-teal-600 hover:text-teal-100 \" s)}\n      [:div {:class \"w-full items-center flex\"}\n       [:div {:class \"mx-2 leading-6\"} text]]]]))\n\n(defn- button-remove-selection [h]\n  [:div\n   [:button {:class \"cursor-pointer w-6 h-full flex items-center text-gray-400 outline-none focus:outline-none\"\n             :on-click h}\n    [:svg {:stroke \"currentColor\"\n           :fill \"none\"\n           :stroke-linejoin \"round\"\n           :width \"100%\"\n           :viewBox \"0 0 24 24\"\n           :xmlns \"http://www.w3.org/2000/svg\"\n           :stroke-linecap \"round\"\n           :stroke-width \"2\"\n           :class \"feather feather-x w-4 h-4\"\n           :height \"100%\"}\n     [:line {:x1 \"18\" :y1 \"6\" :x2 \"6\" :y2 \"18\"}]\n     [:line {:x1 \"6\" :y1 \"6\" :x2 \"18\" :y2 \"18\"}]]]])\n\n(defn- button-dropdown [dropdown? h]\n  (let [points (if dropdown?\n                 \"18 15 12 9 6 15\"\n                 \"18 9  12 15 6 9\")]\n    [:div {:class \"text-gray-300 w-8 py-1 pl-2 pr-1 border-l flex items-center border-gray-200\"}\n     [:button {:class \"cursor-pointer w-6 h-6 text-gray-600 outline-none focus:outline-none\"\n               :on-click h}\n      [:svg {:stroke \"currentColor\"\n             :fill \"none\"\n             :stroke-linejoin \"round\"\n             :width \"100%\"\n             :viewBox \"0 0 24 24\"\n             :xmlns \"http://www.w3.org/2000/svg\"\n             :stroke-linecap \"round\"\n             :stroke-width \"2\"\n             :class \"feather feather-chevron-up w-4 h-4\"\n             :height \"100%\"}\n       [:polyline {:points points}]]]]))\n\n(defn ^{:category :control}\n  select [{:keys [items value on-change]}]\n  (let [l (count items)\n        l1 (- l 1)\n        dropdown? (r/atom false)\n        toggle-dropdown #(swap! dropdown? not)\n        pos-key (fn [i]\n                  (case i\n                    0 :first\n                    l1 :last\n                    nil))\n        select #(do (reset! dropdown? false)\n                    (when on-change (on-change %)))\n        unselect #(when on-change (on-change nil))\n        no-op #()]\n    (fn [{:keys [items value display class on-change]}]\n      [:div {:class (str \"flex flex-col items-center relative \" (or class \"\"))}\n       [css]\n       ;[:div {:class \"flex-auto flex flex-col items-center\"} ; h-64\n       [:div {:class \"w-full\"}\n        [:div {:class \"bg-white flex border border-gray-200 rounded\"} ; p-1 my-2\n         [:div {:class \"flex flex-auto flex-wrap\"}]\n         [:input {:value (if display (display value) value)\n                  :on-change no-op\n                  :class \"p-1 px-2 appearance-none outline-none w-full text-gray-800\"}]\n         [button-remove-selection unselect]\n         [button-dropdown @dropdown? toggle-dropdown]]]\n\n       (when @dropdown?\n         [:div {:class (str \"absolute bg-blue-200 shadow z-50 w-full lef-0 rounded max-h-select top-100 \" ; top-100\n                            \"overflow-y-auto\")}\n          [:div {:class \"flex flex-col w-full\"}\n           (doall (map-indexed (fn [i v]\n                                 ^{:key i}\n                                 [select-item\n                                  {:value v\n                                   :display display\n                                   :selected? (= value v)\n                                   :position (pos-key i)\n                                   :select select}])\n                               items))]])]\n;        ]\n      )))\n\n(defn go-next [v list action]\n  (let [new-index (inc (.indexOf list v))\n        new-index (if (= new-index (count list)) 0 new-index)\n        new-value (nth list new-index)]\n    (action new-value)))\n\n(defn go-prior [v list action]\n  (let [new-index (dec (.indexOf list v))\n        new-index (if (< new-index 0) (- (count list) 1) new-index)\n        new-value (nth list new-index)]\n    (action new-value)))\n\n(defn ^{:category :control}\n  select-nav [{:keys [items value on-change nav?] :as opts}]\n  (if nav?\n    [:div.flex.flex-row\n     [select (merge opts {:class \"flex-grow\"})]\n     [button {:on-click #(go-prior value items on-change)\n              :class \"hover:bg-blue-700 text-gray-600  font-bold rounded border border-gray-200 w-6\"} \"<\"]\n     [button {:on-click #(go-next value items on-change)\n              :class \"hover:bg-blue-700 text-gray-600  font-bold rounded border border-gray-200 w-6\"} \">\"]]\n    [select opts]))\n\n; https://www.creative-tim.com/learning-lab/tailwind-starter-kit/documentation/react/dropdown\n\n"],"x_google_ignoreList":[0]}