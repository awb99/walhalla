{"version":3,"sources":["goldly/service/core.cljs"],"mappings":"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","names":["p__55114","vec__55115","cljs.core.nth","goldly.service.core/print-result","event-type","data","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","p__55119","map__55120","cljs.core/--destructure-map","cljs.core.get","goldly.service.core/run-cb","fun","args","timeout","cb","params","p-clean","cljs.core.dissoc","modular.ws.core.send_BANG_","goldly.service.core/run","ch","cljs.core.async.chan","event","cljs.core/+","cljs.core._EQ_","cljs.core.async.put_BANG_","vec__55125","_","cljs.core.assoc","goldly.service.core/wait-chan-result","fn-success","fn-err","c__41386__auto__","cljs.core.async.impl.dispatch/run","f__41387__auto__","switch__41305__auto__","state_55146","state_val_55147","cljs.core.async.impl.ioc-helpers/take!","inst_55133","inst_55131","inst_55132","inst_55134","statearr-55148","statearr-55149","statearr-55150","inst_55136","statearr-55151","statearr-55152","inst_55139","statearr-55153","statearr-55154","statearr-55155","inst_55141","statearr-55158","statearr-55160","inst_55144","cljs.core.async.impl.ioc-helpers/return-chan","statearr-55161","state-machine__41306__auto__","ret-value__41307__auto__","result__41308__auto__","cljs.core/keyword-identical?","ex__41309__auto__","e55162","statearr-55163","cljs.core/seq","statearr-55164","cljs.core/first","state__41388__auto__","statearr-55165","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","goldly.service.core/process-error","frontend.notifications.core.add_notification","cljs.core.pr_str","goldly.service.core/process-timeout","data-safe","p__55166","map__55167","goldly.service.core/run-a-map","a","path","on-result","r","vec__55168","map__55171","result","error","goldly.service.result/update-atom-where","cljs.core.merge","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","goldly.service.core/run-a","seq55175","G__55176","cljs.core/next","G__55177","G__55178","self__5754__auto__"],"sourcesContent":["(ns goldly.service.core\n  (:require\n   [taoensso.timbre :refer-macros [trace debug debugf info infof warnf error errorf]]\n   [cljs.core.async :refer [>! chan close! put!] :refer-macros [go]]\n   [modular.ws.core :refer [send!]]\n   [frontend.notifications.core :as n]\n   [goldly.service.result :refer [update-atom-where]]))\n\n(defn print-result [[event-type data]]\n  (warnf \"service result rcvd: type: %s data: %s\" event-type data))\n\n; run with callback\n\n(defn run-cb [{:keys [fun args timeout cb]\n               :or {timeout 120000 ; 2 minute\n                    cb print-result}\n               :as params}]\n  (let [p-clean (dissoc params :cb :a :where)]\n    (infof \"running service :%s args: %s\" fun args)\n    (send! [:goldly/service p-clean] cb timeout)\n    nil))\n\n; run with core-async channel\n\n(defn run [params]\n  (let [ch (chan)\n        cb (fn [event]\n             (infof \"service/run cb: %s\" event) +\n             (if (= event :chsk/timeout)\n               (put! ch {:error :timeout})\n               (let [[_ data] event]\n                 (put! ch data))))]\n    (run-cb (assoc params :cb cb))\n    ch))\n\n(defn wait-chan-result [ch fn-success fn-err]\n  (go\n    (let [{:keys [error result] :as r} (<! ch)]\n      (when error\n        (fn-err error))\n      (when result\n        (fn-success result)))))\n\n; run to atom\n\n(defn process-error [data]\n  (error \"error in clj-service: \" data)\n  (n/add-notification :error (pr-str data)))\n\n(defn process-timeout [data]\n  (let [data-safe (dissoc data :a)]\n    (error \"timeout in clj-service: \" data-safe)\n    (n/add-notification :error (str \"timeout clj-fun: \" (:fun data)))))\n\n; run-a-map has identical syntax to run-cb, except it\n; has a and path as well. this is needed so we can pass timeout.\n\n(defn run-a-map [{:keys [a path] :as args}]\n  (let [on-result (fn [r]\n                    (if (= r :chsk/timeout)\n                      (process-timeout args)\n                      (let [;_ (info \"run-a-map-cb: \" r) ; [:goldly/service {:fun :demo/add, :args (2 7), :result 9}]\n                            [_ data] r ; [:goldly/service {:result :error}]\n                            {:keys [result error]} data]\n                        (if error\n                          (process-error data)\n                          (update-atom-where a path result)))))]\n    (run-cb (merge\n             (dissoc args :a :path)\n             {:cb on-result}))))\n\n; legacy run-a\n\n(defn run-a [a path fun & args]\n  (run-a-map {:a a\n              :path path\n              :fun fun\n              :args args}))\n\n"]}