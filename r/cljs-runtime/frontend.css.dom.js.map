{"version":3,"sources":["frontend/css/dom.cljs"],"mappings":"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","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","frontend.css.dom/on-link-load","seq44985","G__44986","cljs.core/first","cljs.core/next","self__5754__auto__","x","_","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","re-frame.core/dispatch","frontend.css.dom/on-link-error","seq44991","G__44992","frontend.css.dom/add-css-link","href","head","js/document","cljs.core/clj->js","link","frontend.css.dom/existing-css","links","get-link","cljs.core.map","frontend.css.dom/remove-css-link","temp__5804__auto__","elem","parent","frontend.css.dom/update-css","current","current-set","cljs.core.into","existing","existing-set","css-add","p1__45048#","cljs.core.filter","cljs.core/contains?","css-remove","p1__45049#","cljs.core.doall"],"sourcesContent":["(ns frontend.css.dom\n  (:require\n   [taoensso.timbre :refer-macros [debugf infof warn warnf errorf]]\n   [re-frame.core :as rf]))\n\n(defn ^:export on-link-load [x & _]\n  (debugf \"css loaded: %s\" x)\n  (rf/dispatch [:css/loading-success x]))\n\n(defn ^:export on-link-error [x & _]\n  (errorf \"css load error: %s\" x)\n  ; we just log css load errors.\n  ; to calculate the status of number of css links tht need loading\n  ; we can say we dont need more loading of a *failed* css download.\n  (rf/dispatch [:css/loading-success x]))\n\n(defn add-css-link [href]\n  (debugf \"adding css: %s\" href)\n  (rf/dispatch [:css/loading-add href])\n  (let [head (.-head js/document)\n        href (clj->js href)\n        link (.createElement js/document \"link\")]\n    (.setAttribute link \"href\" href)\n    (.setAttribute link \"rel\" \"stylesheet\")\n    (.setAttribute link \"type\" \"text/css\")\n    (.setAttribute link \"class\" \"webly\")\n    (.setAttribute link \"onload\" (str \"frontend.css.dom.on_link_load ('\" href \"')\"))\n    (.setAttribute link \"onerror\"  (str \"frontend.css.dom.on_link_error ('\" href \"')\"))\n    ;(println \"link: \" href)\n    (.appendChild head link)))\n\n(defn existing-css []\n  (let [links (.querySelectorAll js/document \"link.webly\")\n        get-link (fn [link] (.getAttribute link \"href\"))]\n    (map get-link links)))\n\n(defn remove-css-link [href]\n  (when-let [elem (.querySelector js/document (str \"link.webly[href='\" href \"']\"))]\n    (let [parent (.-parentElement elem)]\n      ;(error \"link: \" elem \"parent: \" parent)\n      (debugf \"removing css: %s\" href)\n      (.removeChild parent elem))))\n\n(defn update-css [current]\n  (let [current-set (into #{} current)\n        existing (existing-css)\n        existing-set (into #{} existing)\n        css-add (filter #(not (contains? existing-set %)) current)\n        css-remove (filter #(not (contains? current-set %)) existing)]\n    (infof \"css current %s add: %s remove: %s \" current css-add css-remove)\n    (doall (map add-css-link css-add))\n    (doall (map remove-css-link css-remove))))\n\n"],"x_google_ignoreList":[0]}