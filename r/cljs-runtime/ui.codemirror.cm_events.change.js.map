{"version":3,"sources":["ui/codemirror/cm_events/change.cljs"],"mappings":";AAQA,qDAAA,rDAAMA,kHAAqBC,GAAGC;AAA9B,AACE,OAAWD,YAAGC;;AAIhB,2CAAA,mDAAAC,9FAAMI,uGAAuCG,OAAOC;AAApD,AAAA,IAAAP,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAAA,VAAoCK;SAApC,AAAAH,4CAAAF,eAAA,hEAAyBH;SAAzB,AAAAK,4CAAAF,eAAA,hEAA4BI;AAA5B,AACE,IAAMI,OAAK,AAAWX;AAAtB,AACE,AAAAY,0DAAAC,mCAAA,wDAAA,iCAAA,KAAA,GAAA,gDAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,wBAAgCP;GAAhC,OAAA,KAAA,KAAA;;AACA,OAACQ,4BAAUP,QAAQG","names":["ui.codemirror.cm-events.change/editor-load-content","cm","content","p__54607","map__54608","cljs.core/--destructure-map","cljs.core.get","ui.codemirror.cm-events.change/on-change","id","context","sender","evt","code","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","ui.codemirror.fun/save-data"],"sourcesContent":["(ns ui.codemirror.cm-events.change\n  (:require\n   [taoensso.timbre :refer-macros [debugf info error]]\n   [ui.codemirror.api.position :refer [move-to-last-line]]\n   [ui.codemirror.fun :refer [save-data]]))\n\n; load/save from/to buffer\n\n(defn editor-load-content [cm content]\n  (.setValue cm content)\n      ;(move-to-last-line @cm)\n  )\n\n(defn on-change [{:keys [cm id] :as context} sender evt]\n  (let [code (.getValue cm)]\n    (debugf \"saving cm text id: %s\" id)\n    (save-data context code)))\n\n"],"x_google_ignoreList":[0]}