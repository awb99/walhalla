{"version":3,"sources":["keybind/core.cljs"],"mappings":"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","names":["keybind.core/MODS","js/navigator.userAgent","keybind.core/KEYATTRS","keybind.core/DEFCHORD","keybind.core/KEYS","cljs.core.merge","cljs.core.into","iter__5523__auto__","s__57922","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__57924","cljs.core/chunk-buffer","i__57923","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__57921","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","cljs.core.range","s__57945","b__57947","i__57946","iter__57944","s__57962","b__57964","i__57963","iter__57961","s__57971","b__57973","i__57972","iter__57970","js/String.fromCharCode","keybind.core/KNOWN-KEYS","s__57981","b__57983","i__57982","vec__57986","cljs.core.nth","iter__57980","vec__58001","k","v","js/keybind","js/keybind.core","js/keybind.core.BINDINGS","keybind.core/BINDINGS","cljs.core.atom","js/keybind.core.PRESSED","keybind.core/PRESSED","js/keybind.core.ENABLED?","keybind.core/ENABLED?","keybind.core/button->code","button","temp__5802__auto__","code","cljs.core.get","keybind.core/parse-chord","keystring","vec__58038","bits","mods","js/Error","cljs.core.drop_last","p1__58034#","cljs.core.map","or__5045__auto__","cljs.core/mod","cljs.core.reduce","mod","cljs.core.assoc","keybind.core/parse","chain","cljs.core.mapv","keybind.core/e->chord","e","s__58054","b__58056","i__58055","vec__58063","iter__58053","vec__58067","key","attr","keybind.core/reset-sequence!","cljs.core.swap_BANG_","cljs.core/empty","keybind.core/dispatch","bindings","chord","sequence","cljs.core/deref","cljs.core.conj","inner","cljs.core.get_in","handlers","cljs.core/not","seq__58075","chunk__58076","count__58077","i__58078","vec__58099","c__5568__auto__","cljs.core/chunk-first","vec__58103","cljs.core/next","_","handler","cljs.core/reset!","keybind.core/bind","spec","cb","parsed","cljs.core/assoc-in","keybind.core/unbind","cljs.core.update_in","cljs.core/dissoc","keybind.core/bind!","keybind.core/unbind!","keybind.core/unbind-all!","keybind.core/disable!","keybind.core/enable!","keybind.core/dispatcher!","and__5043__auto__","js/keybind.core.bind-keypress-listener","keybind.core/bind-keypress-listener","js/addEventListener"],"sourcesContent":["(ns keybind.core)\n\n;; Definitions\n\n(def MODS\n  {\"shift\" :shift\n   \"ctrl\" :ctrl \"control\" :ctrl \"C\" :ctrl\n   \"alt\" :alt \"option\" :alt \"M\" :alt\n   \"win\" :meta \"cmd\" :meta \"super\" :meta \"meta\" :meta \"S\" :meta\n   ;; default modifier for OS X is cmd and for others is ctrl\n   \"defmod\" (if (neg? (.indexOf js/navigator.userAgent \"Mac OS X\"))\n              :ctrl :meta)})\n\n(def KEYATTRS\n  {:shift \"shiftKey\" :ctrl \"ctrlKey\" :alt \"altKey\" :meta \"metaKey\"\n   :code \"keyCode\"})\n\n(def DEFCHORD {:shift false :ctrl false :alt false :meta false})\n\n(def KEYS\n  (merge {\"backspace\" 8,\n          \"tab\" 9,\n          \"enter\" 13, \"return\" 13,\n          \"pause\" 19,\n          \"caps\" 20, \"capslock\" 20,\n          \"escape\" 27, \"esc\" 27,\n          \"space\" 32,\n          \"pgup\" 33, \"pageup\" 33,\n          \"pgdown\" 34, \"pagedown\" 34,\n          \"end\" 35,\n          \"home\" 36,\n          \"ins\" 45, \"insert\" 45,\n          \"del\" 46, \"delete\" 46,\n\n          \"left\" 37,\n          \"up\" 38,\n          \"right\" 39,\n          \"down\" 40,\n\n          \"*\" 106,\n          \"+\" 107, \"plus\" 107, \"kpplus\" 107,\n          \"kpminus\" 109,\n          \";\" 186,\n          \"=\" 187,\n          \",\" 188,\n          \"-\" 189, \"minus\" 189,\n          \".\" 190,\n          \"/\" 191,\n          \"`\" 192,\n          \"[\" 219,\n          \"\\\\\" 220,\n          \"]\" 221,\n          \"'\" 222\n          }\n\n    ;; numpad\n    (into {} (for [i (range 10)]\n               [(str \"num-\" i) (+ 95 i)]))\n\n    ;; top row 0-9\n    (into {} (for [i (range 10)]\n               [(str i) (+ 48 i)]))\n\n    ;; f1-f24\n    (into {} (for [i (range 1 25)]\n               [(str \"f\" i) (+ 111 i)]))\n\n    ;; alphabet\n    (into {} (for [i (range 65 91)]\n               [(.toLowerCase (js/String.fromCharCode i)) i]))))\n\n(def ^:private KNOWN-KEYS\n  (into {} (for [[k v] KEYS]\n             [v k])))\n\n;; Data\n\n(defonce BINDINGS (atom {}))\n(defonce PRESSED (atom []))\n\n(defonce ENABLED? (atom true))\n\n;; Behavior\n\n(defn button->code [button]\n  (if-let [code (get KEYS button)]\n    [code nil]\n    [(get KEYS (.toLowerCase button)) {:shift true}]))\n\n(defn parse-chord [keystring]\n  (let [bits        (.split keystring #\"-(?!$)\")\n        button      (nth bits (-> bits count dec))\n        [code mods] (button->code button)]\n\n    (when-not code\n      (throw (js/Error. (str \"Unknown key '\" button\n                          \"' in keystring '\" keystring \"'\"))))\n\n    (->> (drop-last bits)\n         (map #(or (get MODS %)\n                   (throw (js/Error. (str \"Unknown modifier '\" mod\n                                       \"' in keystring '\" keystring \"'\")))))\n         (reduce\n           (fn [mods mod] (assoc mods mod true))\n           (merge DEFCHORD {:code code} mods)))))\n\n(defn parse [chain]\n  (let [bits (.split chain \" \")]\n    (mapv parse-chord bits)))\n\n(defn e->chord [e]\n  (into {} (for [[key attr] KEYATTRS]\n             [key (aget e attr)])))\n\n(defn reset-sequence! []\n  (swap! PRESSED empty))\n\n(defn dispatch [e bindings]\n  (let [chord    (e->chord e)\n        sequence (conj @PRESSED chord)\n        inner    (get-in bindings sequence)\n        handlers (:handlers inner)]\n    (cond\n      (not inner) (reset-sequence!)\n      handlers    (do\n                    (doseq [[_ handler] (:handlers inner)]\n                      (handler e sequence))\n                    (reset-sequence!))\n      :else       (reset! PRESSED sequence))))\n\n(defn bind [bindings spec key cb]\n  \"Same as `bind!`, just modifies `bindings` map, you have to handle\n  storage (like an atom) yourself.\"\n  (let [parsed (parse spec)]\n    (assoc-in bindings (conj parsed :handlers key) cb)))\n\n(defn unbind [bindings spec key]\n  \"Same as `unbind!`, just modifies `bindings` map, you have to handle\n  storage (like an atom) yourself.\"\n  (let [parsed (parse spec)]\n    (update-in bindings (conj parsed :handlers) dissoc key)))\n\n;; Main external API\n\n(defn bind! [spec key cb]\n  \"Binds a sequence of button presses, specified by `spec`, to `cb` when\n  pressed. Keys must be unique per `spec`, and can be used to remove keybinding\n  with `unbind!`.\n\n  `spec` format is emacs-like strings a-la \\\"ctrl-c k\\\", \\\"meta-shift-k\\\", etc.\"\n  (swap! BINDINGS bind spec key cb))\n\n(defn unbind! [spec key]\n  \"Removes a callback, identified by `key`, from button sequence `spec`.\"\n  (swap! BINDINGS unbind spec key))\n\n(defn unbind-all! []\n  \"Remove all BINDINGS\"\n  (reset-sequence!)\n  (swap! BINDINGS empty))\n\n(defn disable! []\n  \"Disable dispatching of key events (but leave existing bindings intact).\"\n  (reset! ENABLED? false))\n\n(defn enable! []\n  \"Enable dispatching of key events via the existing bindings.\"\n  (reset! ENABLED? true))\n\n(defn dispatcher! [bindings]\n  \"Return a function to be bound on `keydown` event, preferably globally.\n  Accepts atom with bindings.\n\n  Is bound by default with `keycode/BINDINGS` atom, so you don't need to use\n  that.\"\n  (fn [e]\n    (when (and @ENABLED? (get KNOWN-KEYS (.-keyCode e)))\n      (dispatch e @bindings))))\n\n;; Global key listener\n\n(defonce bind-keypress-listener\n  (js/addEventListener \"keydown\" (dispatcher! BINDINGS) false))\n"],"x_google_ignoreList":[0]}