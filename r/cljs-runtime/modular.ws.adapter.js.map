{"version":3,"sources":["modular/ws/adapter.cljs"],"mappings":";AAUA,AAAKA,uCACH,iBAAAC,qBAAc,wBAAA,xBAAiBE;AAA/B,AAAA,oBAAAF;AAAA,AAAA,SAAAA,LAAWC;AAAX,AACE,uBAAA,hBAAeA;;AADjB;;;AAGF,mCAAA,nCAAME,8EAAUC,KAAKC;AAArB,AACE,AAAAC,0DAAAC,mCAAA,wDAAA,qBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,gCAAuCJ,KAAKC;GAA5C,OAAA,KAAA,MAAA;;AACA,IAAMO,SAAO,gFAAA,hFAACC,qIAAuCC,gCAASC;WAA9D,2CAAA,qDAAA,qDAAA,5JACMC,mNACcJ;IACdI,WAAK,kBAAIX,MACF,mDAAA,nDAACY,8CAAMD,0DAAWX,MAClBW;IALbP,aAM2C,AAACa,qFACAlB,KACAL,uFACAiB;IAT5CP,iBAAA,AAAAC,4BAAAD;WAAA,AAAAE,4CAAAF,eAAA,lEAMcS;cANd,AAAAP,4CAAAF,eAAA,rEAMmBU;cANnB,AAAAR,4CAAAF,eAAA,rEAM2BW;YAN3B,AAAAT,4CAAAF,eAAA,nEAMmCY;AANnC,AAAA,kDAAA,0DAAA,oEAAA,0EAAA,nJAUSH,iEACGC,0EACGC,yEACAC;;AAIjB,GAAA,QAAAE,oCAAAC,uCAAAC,+CAAAC;AAAA;AAAA,AAAA,AAASC,6BAAQ,6CAAA,7CAACC;;AAElB,uCAAA,vCAAOC;AAAP,AAAuB,IAAA7B,qBAAA,AAAA8B,gBAAmBH;AAAnB,AAAA,oBAAA3B;AAAA,AAAA,aAAAA,TAAW+B;AAAX,AAA4B,QAACA,uCAAAA,yCAAAA;;AAA7B;;;AAEvB,wCAAA,xCAAMC;AAAN,AACE,oBAAIjC;AACF,OAAAO,0DAAAC,mCAAA,wDAAA,qBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,MAAA;;AACA,OAAAF,0DAAAC,mCAAA,qDAAA,qBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,MAAA;;;AAEJ,wCAAA,xCAAMyB,wFAAeC;AAArB,AACE,IAAAC,aAAwBD;IAAxBC,iBAAA,AAAAzB,4BAAAyB;cAAA,AAAAxB,4CAAAwB,eAAA,rEAAcC;AAAd,AACE,AAACP;;AACD,AAACG;;AACD,OAACK,sBAAOV,2BACA,AAACW,8CAAgCF,QAAQG","names":["modular.ws.adapter/?csrf-token","temp__5804__auto__","el","js/document","modular.ws.adapter/ws-init!","path","port","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","map__44984","cljs.core/--destructure-map","cljs.core.get","packer","taoensso.sente.packers.transit.get_transit_packer","modular.encoding.transit/encode","modular.encoding.transit/decode","opts","cljs.core.assoc","chsk","ch-recv","send-fn","state","taoensso.sente.make_channel_socket_client_BANG_","js/modular","js/modular.ws","js/modular.ws.adapter","js/modular.ws.adapter.router_","modular.ws.adapter/router_","cljs.core.atom","modular.ws.adapter/stop-router!","cljs.core/deref","stop-f","modular.ws.adapter/sente-csrf-warning","modular.ws.adapter/start-router!","conn","map__44993","ch-chsk","cljs.core/reset!","taoensso.sente/start-client-chsk-router!","modular.ws.msg-handler/event-msg-handler"],"sourcesContent":["(ns modular.ws.adapter\n  (:require\n   [taoensso.timbre :as timbre :refer-macros [tracef debug debugf infof warn warnf errorf trace]]\n   [taoensso.sente :as sente :refer [cb-success?]]\n   [taoensso.sente.packers.transit :as sente-transit] ;; Optional, for Transit encoding\n   [modular.encoding.transit :as e]\n   [modular.ws.msg-handler :refer [event-msg-handler]]))\n\n;; see: https://github.com/ptaoussanis/sente/blob/master/example-project/src/example/client.cljs\n\n(def ?csrf-token\n  (when-let [el (.getElementById js/document \"sente-csrf-token\")]\n    (.getAttribute el \"data-csrf-token\")))\n\n(defn ws-init! [path port]\n  (debug \"connecting sente websocket.. \" path port)\n  (let [packer (sente-transit/get-transit-packer :json e/encode e/decode)\n        opts {:type :auto  ; :ajax\n              :packer packer}\n        opts (if port\n               (assoc opts :port port)\n               opts)\n        {:keys [chsk ch-recv send-fn state]} (sente/make-channel-socket-client!\n                                              path; Must match server Ring routing URL\n                                              ?csrf-token\n                                              opts)]\n    {:chsk chsk\n     :ch-chsk ch-recv\n     :chsk-send! send-fn\n     :chsk-state state}))\n\n; router\n\n(defonce router_ (atom nil))\n\n(defn  stop-router! [] (when-let [stop-f @router_] (stop-f)))\n\n(defn sente-csrf-warning []\n  (if ?csrf-token\n    (debug \"CSRF token detected in HTML, great!\")\n    (warn \"CSRF token NOT detected in HTML, default Sente config will reject requests\")))\n\n(defn start-router! [conn]\n  (let [{:keys [ch-chsk]} conn]\n    (stop-router!)\n    (sente-csrf-warning)\n    (reset! router_\n            (sente/start-client-chsk-router! ch-chsk event-msg-handler))))\n\n\n\n"],"x_google_ignoreList":[0]}