{"version":3,"sources":["goldly/page/page.cljs"],"mappings":";AAgBA,kCAAA,lCAAMA,4EAAgBC;AAAtB,AACE,IAAMC,UAAQ,gDAAA,hDAACC;IACTC,SAAO,gDAAA,hDAACD;AADd,AAEE,+DAAA,2CAAA,nGAACE,qLACsB,WAAKJ,MAAGA,MAAEK;AAAV,AAEE,AAAAC,0DAAAC,mCAAA,uDAAA,mBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,mBAA0BH;GAA1B,OAAA,KAAA,MAAA;;AACA,OAACI,sBAAON,OAAOE;GAJxC,qGAMgC,WAAKK;AAAL,AAGE,AAACD,sBAAOR,QAAQS;;AAHlB;GANhC,yEAWkB,WAAKC;AAAL,AACE,oBAAA,AAAAC,gBAAKX;AAAL,0FAAA,yEAAA,UAGG,kBAAA,AAAAW,0BAAA,uIAAA,jJAAOX,UAAQ,wGAAA,AAAAW,xGAACC,wHAAQZ;;AACzBU;;;;AAE1B;;;;6BAAA,7BAAMG,kEAGHC;AAHH,AAIE,OAACC,yDAAaD;;AAGhB;;;;mCAAA,nCAAME;AAAN,qFAMO,+CAAA,WAAAG,1DAACC,rFACD,oDAAA,7CAACE;AADD,AAAS,oDAAA,4DAAAH,zGAACE;kBAFV,AAACJ,mBAAQF,lCACTG,AACA;;AAGP;;;;;4BAAA,5BAAMK,gEAIHC,EAAEC;AAJL,AAKE,OAAAV,0EAAA,WAAAW,dAAwBD;AAAxB,AAAA,IAAAE,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAAA,RAA8EM;oBAA9E,AAAAJ,4CAAAF,eAAA,3EAAoCG;oBAApC,AAAAD,4CAAAF,eAAA,3EAAkDI;eAAlD,AAAAF,4CAAAF,eAAA,tEAAgEK;AAAhE,AAAA,0HAAA,hCACGlC,mHACC0B,EAAES","names":["goldly.page.page/error-boundary","_","error-a","reagent.core.atom","info-a","reagent.core.create_class","i","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/reset!","e","comp","cljs.core/deref","cljs.core.pr_str","goldly.page.page/show-page","route-map","frontend.page/reagent-page","goldly.page.page/available-pages","cljs.core/methods","cljs.core/keys","p1__50768#","cljs.core.remove","cljs.core._EQ_","cljs.core.into","goldly.page.page/add-page","p","kw","p__50769","map__50770","cljs.core/--destructure-map","cljs.core.get","_route-params","_query-params","_handler","route"],"sourcesContent":["(ns goldly.page.page\n  (:require\n   [reagent.core :as r]\n   [taoensso.timbre :as timbre :refer-macros [error]]\n   [frontend.page :refer [reagent-page]]))\n\n; shows how to impement error boundary:\n; https://github.com/reagent-project/reagent/blob/c214466bbcf099eafdfe28ff7cb91f99670a8433/test/reagenttest/testreagent.cljs\n\n; from component-did-catch\n; #js {:componentStack \n       ; cmp@http://localhost:8000/r/cljs-runtime/reagent.impl.component.js:508:43\n       ; cmp@http://localhost:8000/r/cljs-runtime/reagent.impl.component.js:508:43\n       ; cmp@http://localhost:8000/r/cljs-runtime/reagent.impl.component.js:508:43\n       ; div\n\n(defn error-boundary [_ #_comp]\n  (let [error-a (r/atom nil)\n        info-a (r/atom nil)]\n    (r/create-class\n     {:component-did-catch (fn [_  _ i] #_this #_e  ; [this e i]\n                             ; i is a js object with stacktrace\n                             (error \"page did catch: \" i)\n                             (reset! info-a i))\n\n      :get-derived-state-from-error (fn [e]\n                                      ; to saves the exception data; gets shows in the dom\n                                      ;(println \"pinkie component get-derived-state-from-error: \" e)\n                                      (reset! error-a e)\n                                      #js {})\n      :reagent-render (fn [comp]\n                        (if @error-a\n                          [:div.bg-red-300\n                           \"Error: \"\n                           (when @error-a (pr-str @error-a))]\n                          comp))})))\n\n(defn show-page\n  \"shows a page \n   expects: kw and route-map\"\n  [route-map]\n  (reagent-page route-map))\n\n;; this is already in webly.\n(defn available-pages\n  \"currently available pages that can be used in the routing table\n   seq of page keywords\"\n  []\n  (->> (methods reagent-page)\n       keys\n       (remove #(= :default %))\n       (into [])))\n\n(defn add-page\n  \"add-page is exposed to sci\n   defines a new browser-based page \n   that can be used in the routing table to define new pages\"\n  [p kw]\n  (defmethod reagent-page kw [{:keys [_route-params _query-params _handler] :as route}]\n    [error-boundary\n     [p route]]))\n\n\n"]}