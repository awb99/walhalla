{"version":3,"sources":["viz/hiccup.cljc"],"mappings":";AAKA,0CAAA,1CAAOA,4FAAwBC;AAA/B,AACE,qDAAA,5CACC,AAACC,wBAAQD,sBACT,GAAK,AAACE,2BAAWF,sBACjB,2CAAAG,1CAAS,AAACC,gBAAMJ;;AAGnB;;;;;;0CAAA,1CAAOK,4FAKJC,QAAQC;AALX,AAME,IAAMC,MAAI,AAACJ,gBAAMG;IACXE,kBAAgB,AAACC,uBAAWJ,QAAQE;AAD1C,AAEE,oDAAA,7CAACG,8EAAQ,gDAAA,hDAACC,8CAAML,MAAIE;;AAExB;;;;4BAAA,5BAAMI,gEAGHP,QAAQC;AAHX,AAIE,OAACO,qBACA,WAAKC;AAAL,AACE,GAAI,AAAChB,wCAAuBgB;AAC1B,OAACV,wCAA6BC,QAAQS;;AACtCA;;GACJR;;AAEH","names":["viz.hiccup/hiccup-with-fn-symbol?","hiccup-vector","cljs.core/vector?","cljs.core/map-entry?","cljs.core/Symbol","cljs.core/first","viz.hiccup/replace-tag-in-hiccup-vector","resolve","h","tag","render-function","viz.resolve/resolve-fn","cljs.core.into","cljs.core.assoc","viz.hiccup/resolve-hiccup","clojure.walk/prewalk","x"],"sourcesContent":["(ns viz.hiccup\n  (:require\n   [clojure.walk :refer [prewalk]] ; cljs 1.10 still does not have walk fixed\n   [viz.resolve :refer [resolve-fn]]))\n\n(defn- hiccup-with-fn-symbol? [hiccup-vector]\n  (and\n   (vector? hiccup-vector)\n   (not (map-entry? hiccup-vector)); ignore maps\n   (symbol? (first hiccup-vector)); reagent syntax requires first element  to be a keyword\n   ))\n\n(defn- replace-tag-in-hiccup-vector\n  \"input: hiccup vector\n   if keyword (first position in vector) has been registered via register-tag,\n   then it gets replaced with the react function,\n   otherwise keyword remains\"\n  [resolve h]\n  (let [tag (first h)\n        render-function (resolve-fn resolve tag)]\n    (into [] (assoc h 0 render-function))))\n\n(defn resolve-hiccup\n  \"resolve function-as symbol to function references in the reagent-hickup-map.\n   Leaves regular hiccup data unchanged.\"\n  [resolve h]\n  (prewalk\n   (fn [x]\n     (if (hiccup-with-fn-symbol? x)\n       (replace-tag-in-hiccup-vector resolve x)\n       x))\n   h))\n\n(comment\n  (defn clj-vega [spec]\n    (str \"vega spec: \" (pr-str spec)))\n  (defn clj [s]\n    (cond\n      (= s 'vega) clj-vega))\n\n  (resolve-hiccup clj ['vega \"spec1\"])\n\n  (resolve-hiccup clj [:div\n                       [:p \"hello world!\"]\n                       ['vega \"spec1\"]\n                       ['vega-lite \"spec2\"]])\n\n;  \n  )\n\n\n\n\n\n\n\n"],"x_google_ignoreList":[0]}