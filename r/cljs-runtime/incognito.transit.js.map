{"version":3,"sources":["incognito/transit.cljs"],"mappings":";AAKA,AAAA;;;;;;;;AAAA,AAAA,CAAA,AAAA,gEAAA,hEAASI,2EAECK;;AAFV,AAAA,QAAA,JAEQD;AAFR,AAMI,GAAA,GAAQ,0GAAA,xGAAI,AAACE,mDAAK,AAACC,eAAKF,GAAGG,qCACf,AAACF,mDAAK,AAACC,eAAKF,GAAGI,kCACf,AAACH,mDAAK,AAACC,eAAKF,GAAGK;AAF3B;;AAIE,OAAMP,uBAAYE;;;;AAVxB,CAAA,AAAA,gEAAA,hEAASL,2EAWCK;;AAXV,AAAA,QAAA,JAWQD;AAXR,AAYI,GAAA,GAAQ,0GAAA,xGAAI,AAACE,mDAAK,AAACC,eAAKF,GAAGG,qCACf,AAACF,mDAAK,AAACC,eAAKF,GAAGI,kCACf,AAACH,mDAAK,AAACC,eAAKF,GAAGK;AACzB,GAAI,AAACJ,mDAAK,AAACC,eAAKF,GAAGM;AACjB,oDAAA,7CAACC,gFAAQP;;AACT,uCAAA,AAAAQ,hCAACC,gDAAkBZ,uBAAeG;;;AACpC,OAAMF,uBAAYE;;;;AAlBxB,CAAA,AAAA,sEAAA,tEAASL,iFAmBUK;;AAnBnB,AAAA,YAAA,RAmBcU;AAnBd,AAAA;;;AAAA,CAAA,2DAAA,3DAASf;AAAT,AAAA,AAAA;;;AAAA,CAAA,iEAAA,jEAASA;;AAAT,CAAA,oEAAA,pEAASA;;AAAT,CAAA,yEAAA,WAAAJ,mBAAAC,qBAAAC,5HAASE;AAAT,AAAA,OAAAD,iBAAAF,qBAAA;;;AAAA;;;uDAAA,vDAASI,sHAA+BC,eAAeC;AAAvD,AAAA,YAAAH,gDAAwCE,eAAeC;;;AAA9CH,AAqBT,4CAAA,5CAAMgB,gGAAyBd;AAA/B,AACE,YAAAF,gDAAgCE,eAAe,KAAAe;;AAEjD,2CAAA,3CAAMC,8FAAwBC;AAA9B,AACE,uFAAA,AAAAN,hFAACO,gDAAQC,gDAAkBF","names":["this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","incognito.transit/IncognitoTaggedLiteralHandler","incognito.transit/->IncognitoTaggedLiteralHandler","write-handlers","map-handler","_","v","cljs.core.isa_QMARK_","cljs.core/type","cljs.core/PersistentArrayMap","cljs.core/PersistentHashMap","cljs.core/PersistentTreeMap","incognito.base/IncognitoTaggedLiteral","cljs.core.into","cljs.core/deref","incognito.base/incognito-writer","this","incognito.transit/incognito-write-handler","cognitect.transit/MapHandler","incognito.transit/incognito-read-handler","read-handlers","cljs.core.partial","incognito.base/incognito-reader"],"sourcesContent":["(ns incognito.transit\n  (:require [cognitect.transit :as transit]\n            [cljs.reader :refer [read-string]]\n            [incognito.base :refer [incognito-reader incognito-writer]]))\n\n(deftype IncognitoTaggedLiteralHandler [write-handlers map-handler]\n  Object\n  (tag [_ v]\n    ;; TODO this explicit type dispatch is bad, use an appropriate interface\n    ;; instead\n    ;; if it is not a standard map, we treat it as a record\n    (if-not (or (isa? (type v) cljs.core/PersistentArrayMap)\n                (isa? (type v) cljs.core/PersistentHashMap)\n                (isa? (type v) cljs.core/PersistentTreeMap))\n      \"incognito\"\n      (.tag map-handler v)))\n  (rep [_ v]\n    (if-not (or (isa? (type v) cljs.core/PersistentArrayMap)\n                (isa? (type v) cljs.core/PersistentHashMap)\n                (isa? (type v) cljs.core/PersistentTreeMap))\n      (if (isa? (type v) incognito.base/IncognitoTaggedLiteral)\n        (into {} v) ;; carry on as map\n        (incognito-writer @write-handlers v))\n      (.rep map-handler v)))\n  (stringRep [this v] nil))\n\n(defn incognito-write-handler [write-handlers]\n  (IncognitoTaggedLiteralHandler. write-handlers (transit/MapHandler.)))\n\n(defn incognito-read-handler [read-handlers]\n  (partial incognito-reader @read-handlers))\n"],"x_google_ignoreList":[0]}