{"version":3,"sources":["frontend/css/events.cljs"],"mappings":";AAKA,yDAAA,zDAACA,oHAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;AAAT,AACE,IAAMI,QAAM,kDAAA,mFAAA,wDAAA,uDAAA,pPAACC,+CAAON;IAApBE,aACkC,iBAAAO,mBAAIJ;AAAJ,AAAA,oBAAAI;AAAAA;;AAAA;;;IADlCP,iBAAA,AAAAC,4BAAAD;gBAAA,AAAAE,4CAAAF,eAAA,vEACcK;cADd,AAAAH,4CAAAF,eAAA,rEACwBM;AADxB,AAEE,AAAAE,0DAAAC,mCAAA,qDAAA,sBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,aAAmBP;GAAnB,OAAA,KAAA,MAAA;;AACA,uBAAA,mFAAA,1GAACQ,wLAAiCN,UAAUC;;AAC5CR;;AAEL,yDAAA,zDAACJ,uIAEA,cAAAkB,HAAKd;AAAL,AAAA,IAAAe,aAAAD;QAAA,AAAAf,4CAAAgB,WAAA,IAAA,/DAASd;iBAAT,AAAAF,4CAAAgB,WAAA,IAAA,xEAAWC;gCAAX,AAAAjB,4CAAAgB,WAAA,IAAA,vFAAsBE;AAAtB,AACE,AAAAP,0DAAAC,mCAAA,qDAAA,sBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,sBAA4BK;GAA5B,OAAA,KAAA,MAAA;;AACA,IAAAC,aACuBlB;IADvBkB,iBAAA,AAAAf,4BAAAe;YAAA,AAAAd,4CAAAc,eAAA,wDAAA,3HAAcb;IAAdc,aAIyBd;IAJzBc,iBAAA,AAAAhB,4BAAAgB;gBAAA,AAAAf,4CAAAe,eAAA,gEAAA,vIAEcZ;cAFd,AAAAH,4CAAAe,eAAA,4DAAA,jIAEwBX;gBAFxB,2CAAA,kMAAA,zPAKMH,uHAAkB,AAACe,uGAAMb,UAAUS,6EACnB,AAACI,uGAAMZ,QAAQS;AANrC,AAOE,wDAAA,jDAACI,8CAAMrB,2DAAUK;;AAEtB,yDAAA,zDAACT,+IAEA,cAAA0B,HAAKtB;AAAL,AAAA,IAAAuB,aAAAD;QAAA,AAAAvB,4CAAAwB,WAAA,IAAA,/DAAStB;gBAAT,AAAAF,4CAAAwB,WAAA,IAAA,vEAAWC;YAAX,AAAAzB,4CAAAwB,WAAA,IAAA,nEAAqBlB;AAArB,AACE,6BAAA,mFAAA,wDAAA,jKAACoB,mBAASzB,0MAAoBwB,kBAAWnB","names":["re_frame.core.reg_event_db","p__44863","vec__44865","cljs.core.nth","db","_","map__44871","cljs.core/--destructure-map","cljs.core.get","theme","cljs.core.get_in","available","current","or__5045__auto__","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","re-frame.core/dispatch","p__44873","vec__44874","components","components-default-config","map__44882","map__44883","cljs.core.merge","cljs.core.assoc","p__44884","vec__44885","component","cljs.core/assoc-in"],"sourcesContent":["(ns frontend.css.events\n  (:require\n   [taoensso.timbre :refer-macros [info error]]\n   [re-frame.core :as rf]))\n\n(rf/reg-event-db\n :css/init\n (fn [db [_]]\n   (let [theme (get-in db [:config :webly :theme])\n         {:keys [available current]} (or theme {})]\n     (info \"css init: \" theme)\n     (rf/dispatch [:css/add-components available current])\n     db)))\n\n(rf/reg-event-db\n :css/add-components\n (fn [db [_ components components-default-config]]\n   (info \"css add-component: \" components-default-config)\n   (let [{:keys [theme]\n          :or {theme {}}} db\n         {:keys [available current]\n          :or {available {}\n               current {}}} theme\n         theme {:available (merge available components)\n                :current (merge current components-default-config)}]\n     (assoc db :theme theme))))\n\n(rf/reg-event-db\n :css/set-theme-component\n (fn [db [_ component theme]]\n   (assoc-in db [:theme :current component] theme)))\n\n\n\n\n"],"x_google_ignoreList":[0]}