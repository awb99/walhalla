{"version":3,"sources":["pinkie/pinkie_render.cljs"],"mappings":";AAMA,sCAAA,8CAAAA,pFAAMI,6FAEuCG;AAF7C,AAAA,IAAAN,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;mBAAA,AAAAE,4CAAAF,eAAA,qEAAA,/IAA8BI;gBAA9B,AAAAF,4CAAAF,eAAA,gEAAA,vIAA2CK;AAA3C,AAGE,IAEMC,gBAAU,AAACC,gCAAkBD;IAE7BA,gBAAU,kBAAIF,cAAa,AAACI,yBAAWF,eAAWA;IAClDA,gBAAU,kBAAID,WAAU,AAACI,8CAAgCH,eAAWA;AAL1E,AAAA,0FAAA,kFAQuBA;;AAEzB,AAAA;;;;;;;;;qCAAA,6CAAAI,lFACEE;AADF,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,iEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,iEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,mEAAA,nEACED,8EAQEE;AATJ,AAUG,wEAAA,2CAAA,qEAAA,KAAA,gEAAA,tPAACC,mQAEcD;;;AAZlB,CAAA,mEAAA,nEACEF,8EAYEI,QAAQF;AAbZ,AAAA,sHAAA,5BAcIG,+GACCd,oCAAea,QAAQF;;;AAf5B,CAAA,6DAAA,7DACEF;;AADF","names":["p__50322","map__50323","cljs.core/--destructure-map","cljs.core.get","pinkie.pinkie-render/reagent-inject","map-keywords","fix-style","component","pinkie.pinkie/convert-render-as","pinkie.pinkie/tag-inject","pinkie.pinkie/convert-style-as-strings-to-map","var_args","G__50325","pinkie.pinkie-render/pinkie-render","js/Error","pinkie-spec","pinkie.pinkie_render.pinkie_render","options","pinkie.error/error-boundary"],"sourcesContent":["(ns pinkie.pinkie-render\n  (:require\n   [pinkie.error :refer [error-boundary]]\n   [pinkie.pinkie :refer [tag-inject convert-style-as-strings-to-map convert-render-as]]\n   [pinkie.text]))\n\n(defn reagent-inject [{:keys [map-keywords fix-style]\n                       :or {map-keywords true\n                            fix-style true}} component]\n  (let [;_ (info \"map-keywords: \" map-keywords \"widget: \" widget \" reagent component: \" component)\n        ;_ (info \"meta data: \" (meta component))\n        component (convert-render-as component)\n        ;_ (println \"after convert-render-as \" component)\n        component (if map-keywords (tag-inject component) component)\n        component (if fix-style (convert-style-as-strings-to-map component) component)\n        ;_ (info \"inject result: \" component)\n        ]\n    [:div.reagent-output component]))\n\n(defn ^{:category :pinkie}\n  pinkie-render\n  \"renders a reagent hiccup vector that can contain pinkie components.\n   wrapped with react error boundary.\n   \n   [:p/pinkie {:map-keywords true\n               :fix-style false}\n              [:p/vega spec]]\n   \"\n  ([pinkie-spec]\n   (pinkie-render {:map-keywords true\n                   :fix-style true}\n                  pinkie-spec))\n  ([options pinkie-spec]\n   [error-boundary\n    [reagent-inject options pinkie-spec]]))\n\n;(defn ^{:category :pinkie\n;        :hidden true}\n;  components\n;  \"displays pinkie component table as text.\n;   useful for debugging as it has no dependencies.\"\n;  []\n;  [pinkie.text/text (component-list->str)])\n\n"],"x_google_ignoreList":[0]}