{"version":3,"sources":["frontend/notifications/core.cljs"],"mappings":";AAUA,iDAAA,iFAAA,iEAAA,0DAAA,7PAAKA;AAEL,AAAA,2CAAA,mDAAAC,9FAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,uEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,uEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,uEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,yEAAA,zEAAMD,oFACFE;AADJ,AAEG,qFAAA,qDAAA,nIAACC,uEAAaD;;;AAFjB,CAAA,yEAAA,zEAAMF,oFAGFI,KAAKF;AAHT,AAIG,0FAAA,nFAACC,uEAAaD,OAAOE;;;AAJxB,CAAA,yEAAA,zEAAMJ,oFAKFI,KAAKF,OAAOG;AALhB,AAMG,oBAAQ,CAACR,+EAAAA,qFAAAA,RAAmBO,iEAAAA;AAA5B;AAAA,AAAA,MAAA,KAAAH,MAAA;;;AANH,kDAAA,0EAAA,0DAAA,gEAAA,lJAOQ,AAACK,6EACCF,8DACEF,yDACJG;;;AAVR,CAAA,mEAAA,nEAAML;;AAAN,AAYA,AAAA,+CAAA,uDAAAF,tGAAeU;AAAf,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,2EAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,2EAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,2EAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAP,MAAA,CAAA,8DAAA,AAAA;;;;;;AAAA,CAAA,6EAAA,7EAAeO,wFACXN;AADJ,AAEG,kFAAA,4DAAA,vIAACO,gIAAuBP;;;AAF3B,CAAA,6EAAA,7EAAeM,wFAGXJ,KAAKF;AAHT,AAIG,8FAAA,vFAACO,2EAAiBL,KAAKF;;;AAJ1B,CAAA,6EAAA,7EAAeM,wFAKXJ,KAAKF,OAAOG;AALhB,AAMG,IAAMK,IAAE,AAACP,uEAAaC,KAAKF,OAAOG;AAAlC,AACE,uBAAA,mFAAA,1GAACM,oLAA4BD;;AAC7B,OAAA,gFAAKA;;;AARV,CAAA,uEAAA,vEAAeF;;AAAf","names":["frontend.notifications.core/notification-types","var_args","G__39846","frontend.notifications.core/notification","js/Error","hiccup","frontend.notifications.core.notification","type","ms","cljs.core/random-uuid","G__39897","frontend.notifications.core/add-notification","frontend.notifications.core.add_notification","n","re-frame.core/dispatch"],"sourcesContent":["(ns frontend.notifications.core\n  (:require\n   [re-frame.core :refer [dispatch]]))\n\n;; stolen from:\n;; https://github.com/baskeboler/cljs-karaoke-client/blob/master/src/main/cljs_karaoke/notifications.cljs\n\n; todo: make it more tailwind like\n; ; https://www.creative-tim.com/learning-lab/tailwind-starter-kit/documentation/react/alerts\n\n(def notification-types #{:info :warning :error})\n\n(defn notification\n  ([hiccup]\n   (notification hiccup :info 5000))\n  ([type hiccup]\n   (notification hiccup type 5000))\n  ([type hiccup ms]\n   (assert (notification-types type))\n   {:id (random-uuid)\n    :type type\n    :hiccup hiccup\n    :ms ms}))\n\n(defn ^:export add-notification\n  ([hiccup]\n   (add-notification :info hiccup 5000))\n  ([type hiccup]\n   (add-notification type hiccup 5000))\n  ([type hiccup ms]\n   (let [n (notification type hiccup ms)]\n     (dispatch [:notification/add n])\n     (:id n))))\n"],"x_google_ignoreList":[0]}