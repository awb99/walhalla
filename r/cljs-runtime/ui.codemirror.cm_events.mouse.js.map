{"version":3,"sources":["ui/codemirror/cm_events/mouse.cljs"],"mappings":";AAMA,6CAAA,qDAAAA,lGAAMI,2GAAkDK,OAAOC;AAA/D,AAAA,IAAAT,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;cAAAA,VAA+CO;cAA/C,AAAAL,4CAAAF,eAAA,rEAA4BI;SAA5B,AAAAF,4CAAAF,eAAA,hEAAoCK;SAApC,AAAAH,4CAAAF,eAAA,hEAAuCM;AAAvC,AACE,AAAAI,0DAAAC,mCAAA,wDAAA,gCAAA,KAAA,EAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,4BAAmCN;GAAnC,OAAA,KAAA,KAAA;;AACA,IAAMO,IAAE,AAACC,yCAAcT;AAAvB,AACE,0CAAA,mFAAA,tHAACU,2BAASR,8JAAwBD,GAAGO","names":["p__54606","map__54615","cljs.core/--destructure-map","cljs.core.get","ui.codemirror.cm-events.mouse/on-mousedown","cm-opts","cm","id","context","sender","evt","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","c","ui.codemirror.api.position/cursor-coords","ui.codemirror.fun/dispatch"],"sourcesContent":["(ns ui.codemirror.cm-events.mouse\n  (:require\n   [taoensso.timbre :refer-macros [debug debugf info infof error]]\n   [ui.codemirror.fun :refer [dispatch]]\n   [ui.codemirror.api.position :refer [cursor-coords]]))\n\n(defn on-mousedown [{:keys [cm-opts cm id] :as context} sender evt]\n  (debug \"on-mousedown segment-id: \" id)\n  (let [c (cursor-coords cm)]\n    (dispatch context [:cm/mouse-down id c])))\n"],"x_google_ignoreList":[0]}