{"version":3,"sources":["goldly/sci/clojure_core.cljs"],"mappings":";AAOA,AAAA,kCAAA,0CAAAA,5EAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,qEAAAF;;;AAAA,AAAA,CAAA,uEAAA,vEAAME,kFAAWI;AAAjB,AACE,OAAQC,cAAW,kDAAA,lDAACC,sDAAaF;;;AADnC,CAAA,0DAAA,1DAAMJ;;AAAN;AAAA,CAAA,oDAAA,WAAAC,/DAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAGA,IAAAM,0BAAA;;;+BAAA,uCAAAC,gBAAAC,tFAAuBK,qGAEpBC;AAFH,AAAA,OAAAL,iDAAA,AAAAP,cAAA,AAAAQ,sDAAA,KAAAC,eAAA,KAAA,AAAA,wEAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,AAAAC,cAAA,AAAAH,iDAAA,AAAAP,cAAA,AAAAQ,sDAAA,KAAAC,eAAA,KAAA,AAAA,0FAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,AAAAF,iDAAA,AAAAP,cAAA,AAAAQ,+CAAA,KAAAC,eAAA,KAAA,AAAA,wFAAA,KAAA,IAAA,UAAA,KAAA,IAAA,yDAAA,KAAAA,eAAA,KAAA,AAAA,qFAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,UAAA,KAAA,IAAA,gBAAA,KAAA,IAAA,yDAAA,KAAAA,eAAA,KAAA,AAAAF,iDAAA,AAAAP,cAAA,AAAAQ,+CAAA,KAAAC,eAAA,KAAA,AAAA,wEAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,AAAAF,iDAAA,AAAAP,cAAA,AAAAQ,sDAAA,KAAAC,eAAA,KAAA,AAAA,yEAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,iBAAA,KAAA,IAAA,yDAAA,KAAAA,eAAA,KAAA,AAAAF,iDAAA,AAAAP,cAAA,AAAAQ,sDAAA,KAAAC,eAAA,KAAA,AAAA,iEAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,AAAAF,iDAAA,AAAAP,cAAA,AAAAQ,sDAAA,KAAAC,eAAA,KAAA,AAAA,mEAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,AAAAF,iDAAA,AAAAP,cAAA,AAAAQ,+CAAA,KAAAC,eAAA,KAAA,AAAA,wFAAA,KAAA,IAAA,UAAA,KAAA,IAAA,yDAAA,KAAAA,eAAA,KAAA,AAAA,0FAAA,KAAA,IAAA,eAAA,KAAA,IAAA,yDAAA,KAAAA,eAAA,KAAA,IAAA,KAAA,IAAA,eAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,SAAA,KAAA,IAAA,eAAA,KAAA,IAAA,UAAA,KAAA,IAAA,OAAA,KAAAA,eAAA,KAAA,AAAA,qFAAA,KAAA,IAAA,z+DAIeG;;AAJf,AAAA,CAAA,+CAAA,/CAAuBD;;AAAvBP,AAUA,AAAKS,gCAAM,iDAAA,AAAA,yEAAA,1HAACC","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","goldly.sci.clojure-core/println","seq72878","self__5755__auto__","cljs.core/seq","strs","js/console","clojure.string.join","ret__5824__auto__","&form","&env","cljs.core.sequence","cljs.core.concat","cljs.core/List","cljs.core/vec","goldly.sci.clojure-core/time","expr","goldly.sci.clojure-core/cljns","sci.core.create_ns"],"sourcesContent":["(ns goldly.sci.clojure-core\n  (:refer-clojure :exclude [println time])\n  (:require\n   [clojure.string :as str]\n   [cljs.core]\n   [sci.core :as sci]))\n\n(defn println [& strs]\n  (.error js/console (str/join \" \" strs)))\n\n(clojure.core/defmacro time\n  \"Evaluates expr and prints the time it took. Returns the value of expr.\"\n  [expr]\n  `(let [start# (cljs.core/system-time)\n         ret# ~expr]\n     (prn (cljs.core/str \"Elapsed time: \"\n                         (.toFixed (- (system-time) start#) 6)\n                         \" msecs\"))\n     ret#))\n\n(def cljns (sci/create-ns 'clojure.core nil))"]}