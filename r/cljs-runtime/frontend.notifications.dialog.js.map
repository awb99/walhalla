{"version":3,"sources":["frontend/notifications/dialog.cljs"],"mappings":";AAYA,+CAAA,/CAAMA,sGAAgBC;AAAtB,AACE,oBAAQ,CAACE,+EAAAA,kGAAAA,rBAAmBF,8EAAAA;AAA5B;AAAA,AAAA,MAAA,KAAAC,MAAA;;;AACA,IAAMD,wBAAkB,iBAAAG,mBAAIH;AAAJ,AAAA,oBAAAG;AAAAA;;AAAA;;;IAClBC,UAAQ,iBAAAC,WAAML;IAANK,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;;AAAA,MAAA,KAAAJ,MAAA,CAAA,mEAAAI;;;;AADd,AAKE,QAAA,4DAAqBD;;AAEzB,uDAAA,+DAAAG,tHAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAsCI;WAAtC,AAAAF,4CAAAF,eAAA,lEAAyCK;aAAzC,AAAAH,4CAAAF,eAAA,pEAA8CM;AAA9C,AAAA,0FAAA,mDAAA,2CAAA,+HAAA,2GAAA,qDAAA,gBAAA,mFAAA,yDAAA,2CAAA,6DAAA,/eAES,CAAA,4DAAqBF,sEACnB,AAACb,6CAAec;AAH3B,AAMgB,8BAAA,mFAAA,1GAACE,4LAAmCH;WANpD,mFAAA,mGAQGE;;AAEH,wDAAA,xDAAeE;AAAf,AACE,IAAMC,YAAU,sDAAA,mFAAA,zIAACC;AAAjB,AAAA,0FAAA,mDAAA,2CAAA,uDAAA,2CAAA,8DAAA,QAAA,uDAAA,oBAAA,oDAAA,MAAA,uDAAA,MAAA,2DAAA,MAAA,6DAAA,yBAAA,mFAAA,uDAOW,CAAA,kBAAA,iBAAA,mCAAA,KAAA,yBAAA,eAAA,uBAOR,mEAAA,jDAAM,oBAAA,AAAAC,pBAACC,oCAAWH,aAChB,AAACI,8CACA,iBAAAC,qBAAA,8EAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBA45E2C,AAAAgB,sBAAArB;IA55E3CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,QAAA,AAAAK,eAAAN,gBAAAK,nCAAMU;AAAN,AAAA,AAAA,AAAAR,uBAAAJ,SAAA,oBAAA,kJAAA,2CAAA,oDACS,CAAA,sDAAe,AAAA,gFAAKY,rSAC1BhC,qDAAuBgC;;AAF1B,eAAA,CAAAV,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,oEAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,QAAA,AAAAS,gBAAAjB,pBAAMoB;AAAN,AAAA,OAAAF,eAAA,oBAAA,kJAAA,2CAAA,kNAAA,AAAAH,oEAAA,AAAAI,eAAAnB,jPACS,CAAA,sDAAe,AAAA,gFAAKoB,rSAC1BhC,qDAAuBgC;;;AAF1B;;;;GAAA,KAAA;;AAAA,AAAA,OAAArB,mBAAA,AAAAH,gBAASF;MAFZ","names":["frontend.notifications.dialog/type-css-class","notification-type","js/Error","frontend.notifications.core/notification-types","or__5045__auto__","n-class","G__46014","cljs.core/Keyword","p__46016","map__46017","cljs.core/--destructure-map","cljs.core.get","frontend.notifications.dialog/notification-component","id","type","hiccup","re-frame.core/dispatch","frontend.notifications.dialog/notifications-container","nots-subs","re_frame.core.subscribe","cljs.core/deref","cljs.core/not-empty","cljs.core.doall","iter__5523__auto__","s__46019","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__46021","cljs.core/chunk-buffer","i__46020","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__46018","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","n","cljs.core/chunk-first"],"sourcesContent":["(ns frontend.notifications.dialog\n  (:require\n   ;[clojure.string :as str]\n   [re-frame.core :as rf :include-macros true]\n   [frontend.notifications.core :refer [notification-types]]\n   [frontend.notifications.subscriptions] ; side-effects\n   [frontend.notifications.events] ; side-effects\n   ))\n\n;; stolen from:\n;; https://github.com/baskeboler/cljs-karaoke-client/blob/master/src/main/cljs_karaoke/notifications.cljs\n\n(defn type-css-class [notification-type]\n  (assert (notification-types notification-type))\n  (let [notification-type (or notification-type :info)\n        n-class (case notification-type\n                  :error \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4\"\n                  :warning \"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4\"\n                  :info \"bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4\")]\n    (str \"notification \" n-class)))\n\n(defn notification-component [{:keys [id type hiccup]}]\n  [:div\n   {:key (str \"notification-\" id)\n    :class (type-css-class type)\n    :role \"alert\"}\n   [:button\n    {:on-click #(rf/dispatch [:notification/dismiss id])}\n    [:i.fas.fa-trash.pr-3]]\n   hiccup])\n\n(defn ^:export notifications-container []\n  (let [nots-subs (rf/subscribe [:notifications])]\n    [:div {:style {:position \"fixed\"\n                   :width \"calc(100vw - 3em)\"\n                   :top \"6em\"\n                   :right \"1em\"\n                   :z-index 300;\n                   :overflow \"hidden\"}}\n     [:style (str \".notification {\"\n                  \"opacity: 0.8; \"\n                  \"margin-bottom 0.5em !important; \"\n                  \"} \"\n                  \".notification:hover { \"\n                  \"opacity: 1; \"\n                  \"} \")]\n     (when (not-empty @nots-subs)\n       (doall\n        (for [n @nots-subs]\n          ^{:key (str \"notify-\" (:id n))}\n          [notification-component n])))]))"],"x_google_ignoreList":[0]}