{"version":3,"sources":["pinkgorilla/repl/cljs/component.cljs"],"mappings":";AAOA,4CAAA,oDAAAA,hGAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAA,AAAAE,4CAAAF,eAAA,nEAAyBI;WAAzB,AAAAF,4CAAAF,eAAA,lEAA+BK;aAA/B,AAAAH,4CAAAF,eAAA,pEAAoCM;YAApC,AAAAJ,4CAAAF,eAAA,uDAAA,2CAAA,uDAAA,OAAA,yDAAA,5RAA2CO;aAA3C,AAAAL,4CAAAF,eAAA,pEAAiDQ;AAAjD,AAEE,IAAMC,KAAG,AAACC,iCAAiB,AAACC;IACtBC,IAAE,gDAAA,hDAACC;AADT,AAEE,+DAAA,2CAAA,oEAAA,YAAA,nLAACC,4PAGC,WAAKC;AAAL,AAAA,0FAAA,mDAAA,2CAAA,qDAAA,HACaN,0DACGF;GALlB,oFAMuB,WAAKS;AAAL,AACE,AAAAC,0DAAAC,mCAAA,qDAAA,kCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,6BAAA,HAAgCV,cAAc,AAACW,kBAAOJ;GAAtD,OAAA,KAAA,MAAA;;AACA,OAACK,sBAAOT,EAAE,CAACR,sCAAAA,iDAAAA,bAAMK,6BAAAA,1BAAGD,6BAAAA;GAR7C,0FAU0B,WAAKQ;AAAL,AACE,AAAAC,0DAAAC,mCAAA,qDAAA,kCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,MAAA;;AACA,oBAAMd;AAAN,AACE,IAAAiB,WAAA,AAAAC,gBAAOX;IAAPY,WAASf;AAAT,AAAA,gFAAAa,SAAAE,2BAAAF,SAAAE,rHAACnB,qCAAAA,wDAAAA;;AADH;;GAZ5B,sFAkBwB,iBAAAoB,NAAKT;AAAL,AAAA,IAAAU,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAAWX;iBAAX,AAAAY,4CAAAD,WAAA,IAAA,xEAAaE;gBAAb,AAAAD,4CAAAD,WAAA,IAAA,vEAAwBG;AAAxB,AACE,IAAAC,aAAqB,AAACV,kBAAOJ;YAA7B,AAAAW,4CAAAG,WAAA,IAAA,nEAAOf;iBAAP,AAAAY,4CAAAG,WAAA,IAAA,xEAASC;AAAT,AACE,AAAAd,0DAAAC,mCAAA,qDAAA,kCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,qBAA2BY;GAA3B,OAAA,KAAA,MAAA;;AACA,oBAAMzB;AAAN,AACE,IAAA0B,WAAA,AAAAT,gBAASX;IAATqB,WAAWxB;IAAXyB,WAAcH;AAAd,AAAA,oFAAAC,SAAAC,SAAAC,6BAAAF,SAAAC,SAAAC,7IAAC5B,uCAAAA,mEAAAA;;AADH","names":["p__50797","map__50799","cljs.core/--destructure-map","cljs.core.get","pinkgorilla.repl.cljs.component/component","start","stop","update","style","config","id","cljs-uuid-utils.core/uuid-string","cljs-uuid-utils.core/make-random-uuid","c","reagent.core.atom","reagent.core.create_class","_","this","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","reagent.core/argv","cljs.core/reset!","G__50803","cljs.core/deref","G__50804","p__50805","vec__50806","cljs.core.nth","prev-props","prev-more","vec__50809","new-config","G__50812","G__50813","G__50814"],"sourcesContent":["(ns pinkgorilla.repl.cljs.component\n  (:require\n   [taoensso.timbre :as timbre :refer-macros [trace debug debugf info warn error]]\n   [clojure.string]\n   [reagent.core :as r]\n   [cljs-uuid-utils.core :as uuid]))\n\n(defn component [{:keys [start stop update style config]\n                  :or {style {:width \"100%\" :height \"100%\"}}}]\n  (let [id (uuid/uuid-string (uuid/make-random-uuid))\n        c (r/atom nil)]\n    (r/create-class\n     {:display-name  \"component\"\n      :reagent-render\n      (fn [_]\n        [:div {:id id\n               :style style}])\n      :component-did-mount (fn [this]\n                             (info \"component started. id: \" id \" props: \" (r/argv this))\n                             (reset! c (start id config)))\n\n      :component-will-unmount (fn [this]\n                                (info \"component stopped.\")\n                                (when stop\n                                  (stop @c id)))\n\n      ;:component-will-receive-props (fn [this new-argv]\n      ;                                (println \"receive props: \" new-argv))\n\n      :component-did-update (fn [this [_ prev-props prev-more]]\n                              (let [[_ new-config] (r/argv this)]\n                                (info \"component updated \" new-config)\n                                (when update\n                                  (update @c id new-config))))})))\n"],"x_google_ignoreList":[0]}