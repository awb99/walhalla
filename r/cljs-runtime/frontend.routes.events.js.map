{"version":3,"sources":["frontend/routes/events.cljs"],"mappings":";AAOA,yDAAA,zDAACA,sHAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;sBAAT,AAAAF,4CAAAD,WAAA,IAAA,7EAAWI;qBAAX,AAAAH,4CAAAD,WAAA,IAAA,5EAA2BK;AAA3B,AACE,AAAAC,0DAAAC,mCAAA,qDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,KAAA;;AACA,AAACC,sBAAOC,uBAAON;;AACf,AAAAE,0DAAAC,mCAAA,qDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,6BAAmCJ;GAAnC,OAAA,KAAA,KAAA;;AACA,IAAMF,SAAG,iBAAAS,mBAAIT;AAAJ,AAAA,oBAAAS;AAAAA;;AAAA;;;AAAT,AACE,AAAAL,0DAAAC,mCAAA,qDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,MAAA;;AACA,AAAcI;;AACd,iCAAA,mFAAA,6DAAA,2CAAA,0EAAA,/RAACC,mBAASX,4PAAoBE,yEAAwBC;;AAE3D,yDAAA,zDAACS,iIAEA,aAAAC,FAAKZ;AAAL,AAAA,IAAAa,aAAAD;YAAA,AAAAd,4CAAAe,WAAA,IAAA,nEAAQb;YAAR,AAAAF,4CAAAe,WAAA,IAAA,nEAAUC;AAAV,AACE,AAAAX,0DAAAC,mCAAA,wDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,oBAA2BS;GAA3B,OAAA,KAAA,MAAA;;AACA,AAACC,iCAAYD;;AAFf;;AAKD,yDAAA,zDAACH,mHAEA,aAAAK,FAAKhB;AAAL,AAAA,IAAAiB,aAAAD;IAAAE,aAAA,AAAAC,cAAAF;IAAAG,eAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;YAAAE,RAAQpB;IAARoB,mBAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;qBAAAE,jBAAUG;aAAVL,TAA2BM;AAA3B,AACE,GAAI,OAASD;AACX,AAACE,0BAAKF;;AACN,GAAI,2BAAA,1BAAG,AAACG,gBAAMF;AACZ,AAAI,AAAArB,0DAAAC,mCAAA,wDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,wBAAgC,+CAAA,/CAACsB,kIAAQJ,uBAAgBC;GAAzD,OAAA,KAAA,MAAA;;AACA,AAACI,8CAAMC,2BAAM,+CAAA,/CAACF,kIAAQJ,uBAAgBC;;AAC1C,AAAI,AAAArB,0DAAAC,mCAAA,wDAAA,yBAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,yBAAgCkB;GAAhC,OAAA,KAAA,MAAA;;AACA,AAACM,2BAAMN;;;;AAPjB;;AAUD,2DAAA,3DAACO,+KAEA,WAAK/B,GAAGC;AAAR,AACE,yDAAA,mFAAA,rIAAC+B,+CAAOhC","names":["re_frame.core.reg_event_db","p__45550","vec__45553","cljs.core.nth","db","_","routes-frontend","routes-backend","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/reset!","frontend.routes/routes","or__5045__auto__","frontend.routes/history","cljs.core/assoc-in","re_frame.core.reg_event_fx","p__45573","vec__45575","match","frontend.routes/goto-route!","p__45581","vec__45582","seq__45583","cljs.core/seq","first__45584","cljs.core/first","cljs.core/next","handler_or_url","params","frontend.routes/nav!","cljs.core/count","cljs.core.concat","cljs.core.apply","frontend.routes/goto!","re_frame.core.reg_sub","cljs.core.get_in"],"sourcesContent":["(ns frontend.routes.events\n  (:require\n   [taoensso.timbre :refer-macros [debug info]]\n   [re-frame.core :as rf]\n   [pushy.core :as pushy]\n   [frontend.routes :refer [routes history goto! goto-route! nav!]])) ;set-initial-query-params\n\n(rf/reg-event-db\n :bidi/init\n (fn [db [_ routes-frontend routes-backend]]\n   (info \"bidi init ..\")\n   (reset! routes routes-frontend)\n   (info \"bidi routes-frontend are: \" routes-frontend)\n   (let [db (or db {})]\n     (info \"starting pushy\")\n     (pushy/start! history) ; link url => state\n     (assoc-in db [:bidi] {:client routes-frontend :server routes-backend}))))\n\n(rf/reg-event-fx\n :bidi/goto-route\n (fn [_ [_ match]]\n   (debug \"bidi/goto-route: \" match)\n   (goto-route! match)\n   nil))\n\n(rf/reg-event-fx\n :bidi/goto\n (fn [_ [_ handler_or_url & params]]\n   (if (string? handler_or_url)\n     (nav! handler_or_url)\n     (if (> (count params) 0)\n       (do (debug \"bidi/goto! (params): \"  (concat [handler_or_url] params))\n           (apply goto! (concat [handler_or_url] params)))\n       (do (debug \"bidi/goto! (no-params)\" handler_or_url)\n           (goto! handler_or_url))))\n   nil))\n\n(rf/reg-sub\n :webly/routes\n (fn [db _]\n   (get-in db [:bidi])))\n"],"x_google_ignoreList":[0]}