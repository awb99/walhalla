{"version":3,"sources":["modular/oauth2/user/login_dialog.cljs"],"mappings":"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","names":["modular.oauth2.user.login-dialog/login-ui","username","reagent.core.atom","password","on-change","a","e","v","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/reset!","login-local","cljs.core/deref","re-frame.core/dispatch","login-oidc","provider","modular.oauth2.user.login-dialog/show-login-dialog","re_frame.core.reg_event_fx","_","re_frame.core.reg_event_db","p__39914","vec__39915","cljs.core.nth","map__39918","cljs.core/--destructure-map","cljs.core.get","db","error","error-message","user","token","result","frontend.notifications.core.add_notification","cljs.core.assoc","p__39931","p__39932","map__39933","vec__39934","cljs.core.pr_str","p__39944","p__39945","map__39946","vec__39947","service","new-db","cljs.core.update_in","cljs.core/dissoc"],"sourcesContent":["(ns modular.oauth2.user.login-dialog\n  (:require\n   [taoensso.timbre :refer-macros [info error]]\n   [reagent.core :as r]\n   [re-frame.core :as rf]\n   [frontend.notifications.core :refer [add-notification]]))\n\n(defn login-ui []\n  (let [username (r/atom \"\")\n        password (r/atom \"\")\n        on-change (fn [a]\n                    (fn [e]\n                      (let [v (-> e .-target .-value)]\n                        (info \"changed: \" v)\n                        (reset! a v))))\n        login-local (fn []\n                      (info \"logging in locally..\")\n                      (rf/dispatch [:ws/send\n                                    [:login/local\n                                     {:username @username :password @password}]]))\n        login-oidc (fn [provider]\n                     (info \"logging in oidc \" provider \" ..\")\n                     (rf/dispatch [:oauth2/authorize-start provider :oauth2/login-oauth-success]))]\n\n    (fn []\n      [:div {:class \"w-full flex items-center justify-center bg-blue-800\"}\n       [:div {:class \"bg-gray-200 w-96 h-auto rounded-lg pt-8 pb-8 px-8 flex flex-col items-center\"}\n\n      ;; header\n        [:label {:class \"font-light text-4xl mb-4\"} \"gorilla\"\n         [:span {:class \"font-bold\"} \"login\"]]\n\n      ; username\n        [:input {:type \"text\"\n                 :class \"w-full h-12 rounded-lg px-4 text-lg focus:ring-blue-600 mb-4\"\n                 :placeholder \"Email\"\n                 :value @username\n                 :on-change (on-change username)}]\n        [:input {:type \"password\"\n                 :class \"w-full h-12 rounded-lg px-4 text-lg focus:ring-blue-600 mb-4\"\n                 :placeholder \"Password\"\n                 :value @password\n                 :on-change (on-change password)}]\n        [:button {:class \"w-full h-12 rounded-lg bg-blue-600 text-gray-200 uppercase font-semibold hover:bg-blue-700 text-gray-100 transition mb-4\"\n                  :on-click login-local} \"Login\"]\n\n        [:label {:class \"text-gray-800 mb-4\"} \"or\"]\n\n        [:button {:class \"w-full h-12 rounded-lg bg-red-600 text-gray-200 uppercase font-semibold hover:bg-red-700 text-gray-100 transition mb-4\"\n                  :on-click #(login-oidc :google)}\n         \"Sign with Google\"]\n        ;[:button {:class \"w-full h-12 rounded-lg bg-blue-600 text-gray-200 uppercase font-semibold hover:bg-blue-700 text-gray-100 transition mb-4\"}\n        ; \"Sign with Facebook\"]\n        ;[:button {:class \"w-full h-12 rounded-lg bg-gray-800 text-gray-200 uppercase font-semibold hover:bg-gray-900 text-gray-100 transition mb-4\"}\n        ;\"Sign with Github\"]\n        ]])))\n\n(defn show-login-dialog []\n  (rf/dispatch [:modal/open [:div [login-ui]]\n                :medium]))\n\n(rf/reg-event-fx :login/dialog\n                 (fn [_ _]\n                   (info \"showing login dialog\")\n                   (show-login-dialog)))\n\n(rf/reg-event-db\n :login/local\n (fn [db [_ {:keys [error error-message user token] :as result}]]\n   (info \"login result: \" result)\n   (rf/dispatch [:modal/close])\n   (when error\n     (add-notification :error error-message))\n   (when user\n     (add-notification :info (str \"Logged in as: \" user)))\n   (if user\n     (assoc db :user result)\n     db)))\n\n(rf/reg-event-fx\n :oauth2/login-oauth-success\n (fn [{:keys [db]} [_ provider token]]\n   (info \"oauth2 login success via oidc for provider \" provider \"token: \" (pr-str token))\n   (rf/dispatch [:ws/send [:login/oidc token]])\n   nil))\n\n;; LOGOUT\n\n(rf/reg-event-fx\n :oauth2/logout\n (fn [{:keys [db]} [_ service]]\n   (let [new-db (update-in db [:token] dissoc service)]\n     {:db       new-db})))\n"],"x_google_ignoreList":[0]}