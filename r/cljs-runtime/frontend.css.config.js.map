{"version":3,"sources":["frontend/css/config.cljc"],"mappings":";AAIA,+BAAA,/BAAMA,sEAAUC,OAAOC;AAAvB,AACE,GAAI,EAAI,uCAAA,vCAACC,kCAAaD,kBACd,uCAAA,vCAACC,kCAAaD;AACpBA;;AACA,oDAAKD,oDAAOC;;;AAEhB,oCAAA,pCAAME,gFAAeH,OAAOI,UAAUC,aAAaC;AAAnD,AACE,IAAMA,sBAAgB,iBAAAC,mBAAID;AAAJ,AAAA,oBAAAC;AAAAA;;AAAA;;;IAChBC,YAAU,WAAKC;AAAL,AACE,IAAAF,mBAAI,yDAAA,zDAACG,+CAAON,6FAAWC,aAAaI;AAApC,AAAA,oBAAAF;AAAAA;;AAAA;;;IACZI,QAAM,iBAAAC,WAAMN;AAAN,AAAA,GAAA,AAAAO,6CAAA,MAAAD;AAAA;;AAAA,GAAA,AAAAC,6CAAA,KAAAD;AAEO,iBAAA,VAACJ;;AAFR,AAGE,OAACM,+CACA,UAAA,VAACN,gBACD,AAACA,UAAUF;;;;;AAR1B,AASE,oDAAA,7CAACS,8EACK,AAACC,4CAAI,AAACC,gDAAQlB,6BAASC,QAAQW;;AAEzC,8BAAA,9BAAMO,oEAASlB,OAAOI,UAAUe;AAAhC,AACE,oDAAA,7CAACJ,8EACK,AAACK,+CACA,eAAAC,JAAKG;AAAL,AAAA,IAAAF,aAAAD;SAAA,AAAAE,4CAAAD,WAAA,IAAA,hEAAUG;QAAV,AAAAF,4CAAAD,WAAA,IAAA,/DAAaI;AAAb,AACE,OAACZ,+CAAOU,IAAI,AAACrB,kCAAcH,OAAOI,UAAUqB,GAAGC;GAFlD,iCAICP","names":["frontend.css.config/link-css","prefix","link","clojure.string/starts-with?","frontend.css.config/css-component","available","component-kw","component-theme","or__5045__auto__","get-theme","theme","cljs.core.get_in","links","G__41470","cljs.core._EQ_","cljs.core.concat","cljs.core.into","cljs.core.map","cljs.core.partial","frontend.css.config/css-app","current","cljs.core.reduce","p__41494","vec__41495","cljs.core.nth","acc","kw","v"],"sourcesContent":["(ns frontend.css.config\n  (:require\n   [clojure.string :refer [starts-with?]]))\n\n(defn link-css [prefix link]\n  (if (or (starts-with? link \"http\")\n          (starts-with? link \"/\"))\n    link\n    (str prefix link)))\n\n(defn css-component [prefix available component-kw component-theme]\n  (let [component-theme (or component-theme false) ;  (get config component-kw) false)\n        get-theme (fn [theme]\n                    (or (get-in available [component-kw theme]) []))\n        links (case component-theme\n                false []\n                true (get-theme true)\n                (concat\n                 (get-theme true)\n                 (get-theme component-theme)))]\n    (into []\n          (map (partial link-css prefix) links))))\n\n(defn css-app [prefix available current]\n  (into []\n        (reduce\n         (fn [acc [kw v]]\n           (concat acc (css-component prefix available kw v)))\n         []\n         current)))\n\n"],"x_google_ignoreList":[0]}