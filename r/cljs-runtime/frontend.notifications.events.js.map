{"version":3,"sources":["frontend/notifications/events.cljs"],"mappings":";AASA,yDAAA,zDAACA,mIAEA,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAAmBI;IAAnBF,aAAA,AAAAD,4CAAAD,WAAA,IAAA;IAAAE,iBAAA,AAAAJ,4BAAAI;QAAAA,JAAwCK;SAAxC,AAAAR,4CAAAG,eAAA,hEAA6BG;SAA7B,AAAAN,4CAAAG,eAAA,hEAAgCI;AAAhC,AACE,GAAI,gDAAA,hDAACE,6CAAEF;AAAP,kDAAA,+FACWH,/CAAG,kDAAA,lDAACM,yHAAsBC,eAAKH;;AAD1C,kDAAA,2LAAA,wEAAA,mFAAA,2CAAA,qDAAA,6DAAA,mFAAA,veAEWJ,/CAAG,kDAAA,lDAACM,yHAAsBC,eAAKH,2PACjBD,qOAC6BD;;;AAEzD,yDAAA,zDAACX,qIAEA,aAAAiB,FAAKP;AAAL,AAAA,IAAAQ,aAAAD;YAAA,AAAAV,4CAAAW,WAAA,IAAA,nEAAQR;aAAR,AAAAH,4CAAAW,WAAA,IAAA,pEAAUC;WAAV,AAAAZ,4CAAAW,WAAA,IAAA,lEAAiBE;AAAjB,AACE,IAAMP,IAAE,AAACQ,uEAAaD,KAAKD;AAA3B,AACE,uBAAA,mFAAA,1GAACG,oLAA4BT;;AAD/B;;AAIH,yDAAA,zDAACU,2IAEA,cAAAC,HAAKf;AAAL,AAAA,IAAAgB,aAAAD;QAAA,AAAAjB,4CAAAkB,WAAA,IAAA,/DAASf;sBAAT,AAAAH,4CAAAkB,WAAA,IAAA,7EAAWC;AAAX,sDACMjB,tDACA,yDAAA,lDAACM,yHAAsB,WAAKY;AAAL,AACE,yBAAA,WAAAC,7BAACC;AAAD,AACE,OAACC,gDAAKJ,gBAAgB,AAAA,gFAAAE;GACvBD;;;AAEjC,yDAAA,zDAACJ,gJAEA,cAAAQ,HAAKtB;AAAL,AAAA,IAAAuB,aAAAD;QAAA,AAAAxB,4CAAAyB,WAAA,IAAA,/DAAStB;mBAAT,AAAAH,4CAAAyB,WAAA,IAAA,1EAAWC;eAAX,AAAA1B,4CAAAyB,WAAA,IAAA,tEAAoBE;AAApB,AACE,AAAAC,0DAAAC,mCAAA,uDAAA,gCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,mBAA0BH;GAA1B,OAAA,KAAA,MAAA;;AACA,uBAAA,mFAAA,1GAACZ,oLACU,uEAAA,vEAACD,mIACa,2DAAA,oKAAA,oJAAA,tUAAKY,qEAAoB,AAAA,kGAAcC,4DAAe,AAAA,wFAASA;;AACxFzB","names":["re_frame.core.reg_event_fx","p__45947","p__45948","map__45960","cljs.core/--destructure-map","cljs.core.get","vec__45964","cljs.core.nth","map__45967","db","_","id","ms","n","cljs.core._EQ_","cljs.core.update","cljs.core/conj","p__45975","vec__45980","hiccup","type","frontend.notifications.core.notification","re-frame.core/dispatch","re_frame.core.reg_event_db","p__45988","vec__45989","notification-id","notis","p1__45987#","cljs.core/filterv","cljs.core.not_EQ_","p__45992","vec__45994","location","response","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay"],"sourcesContent":["(ns frontend.notifications.events\n  (:require\n   [taoensso.timbre :refer-macros [error]]\n   [re-frame.core :as rf :include-macros true :refer [dispatch]]\n   [frontend.notifications.core :refer [notification]]))\n\n;; stolen from:\n;; https://github.com/baskeboler/cljs-karaoke-client/blob/master/src/main/cljs_karaoke/events/notifications.cljs\n\n(rf/reg-event-fx\n :notification/add\n (fn [{:keys [db]} [_ {:keys [id ms] :as n}]]\n   (if (= ms 0)\n     {:db (-> db (update :notifications conj n))}\n     {:db (-> db (update :notifications conj n))\n      :dispatch-later [{:ms ms\n                        :dispatch [:notification/dismiss id]}]})))\n\n(rf/reg-event-fx\n :notification/show\n (fn [_ [_ hiccup type]]\n   (let [n (notification type hiccup)]\n     (dispatch [:notification/add n])\n     nil)))\n\n(rf/reg-event-db\n :notification/dismiss\n (fn [db [_ notification-id]]\n   (-> db\n       (update :notifications (fn [notis]\n                                (filterv\n                                 #(not= notification-id (:id %))\n                                 notis))))))\n\n(rf/reg-event-db\n :process-error-response\n (fn [db [_ location response]]\n   (error \"ERROR RESPONSE: \" response)\n   (dispatch [:notification/add\n              (notification :warning\n                            (str location \" Error: \" (:status-text response) \" (\" (:status response) \")\"))])\n   db))\n"],"x_google_ignoreList":[0]}