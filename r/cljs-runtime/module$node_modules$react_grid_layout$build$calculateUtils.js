shadow$provide.module$node_modules$react_grid_layout$build$calculateUtils=function(global,require,module,exports){function calcGridColWidth(positionParams){var cols=positionParams.cols;return(positionParams.containerWidth-positionParams.margin[0]*(cols-1)-2*positionParams.containerPadding[0])/cols}function calcGridItemWHPx(gridUnits,colOrRowSize,marginPx){return Number.isFinite(gridUnits)?Math.round(colOrRowSize*gridUnits+Math.max(0,gridUnits-1)*marginPx):gridUnits}function clamp(num,lowerBound,upperBound){return Math.max(Math.min(num,
upperBound),lowerBound)}Object.defineProperty(exports,"__esModule",{value:!0});exports.calcGridColWidth=calcGridColWidth;exports.calcGridItemPosition=function(positionParams,x,y,w,h,state){var margin=positionParams.margin,containerPadding=positionParams.containerPadding,rowHeight=positionParams.rowHeight;positionParams=calcGridColWidth(positionParams);var out={};state&&state.resizing?(out.width=Math.round(state.resizing.width),out.height=Math.round(state.resizing.height)):(out.width=calcGridItemWHPx(w,
positionParams,margin[0]),out.height=calcGridItemWHPx(h,rowHeight,margin[1]));state&&state.dragging?(out.top=Math.round(state.dragging.top),out.left=Math.round(state.dragging.left)):(out.top=Math.round((rowHeight+margin[1])*y+containerPadding[1]),out.left=Math.round((positionParams+margin[0])*x+containerPadding[0]));return out};exports.calcGridItemWHPx=calcGridItemWHPx;exports.calcWH=function(positionParams,width,height,x,y){var margin=positionParams.margin,maxRows=positionParams.maxRows,cols=positionParams.cols,
rowHeight=positionParams.rowHeight;positionParams=calcGridColWidth(positionParams);width=Math.round((width+margin[0])/(positionParams+margin[0]));height=Math.round((height+margin[1])/(rowHeight+margin[1]));width=clamp(width,0,cols-x);height=clamp(height,0,maxRows-y);return{w:width,h:height}};exports.calcXY=function(positionParams,top,left,w,h){var margin=positionParams.margin,cols=positionParams.cols,rowHeight=positionParams.rowHeight,maxRows=positionParams.maxRows;positionParams=calcGridColWidth(positionParams);
left=Math.round((left-margin[0])/(positionParams+margin[0]));top=Math.round((top-margin[1])/(rowHeight+margin[1]));left=clamp(left,0,cols-w);top=clamp(top,0,maxRows-h);return{x:left,y:top}};exports.clamp=clamp}
//# sourceMappingURL=module$node_modules$react_grid_layout$build$calculateUtils.js.map
