{
"version":3,
"file":"module$node_modules$deepmerge$dist$cjs.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/deepmerge/dist/cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$deepmerge$dist$cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n\n};"],
"names":["shadow$provide","global","require","module","exports","cloneUnlessOtherwiseSpecified","value","options","clone","isMergeableObject","deepmerge","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getEnumerableOwnPropertySymbols","Object","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","call","getKeys","keys","propertyIsOnObject","object","property","_","mergeObject","destination","forEach","key","hasOwnProperty","customMerge","arrayMerge","sourceIsArray","targetIsArray","stringValue","prototype","toString","$$typeof","REACT_ELEMENT_TYPE","Symbol","for","all","deepmerge.all","array","Error","reduce","prev","next"]
}
