{"version":3,"sources":["pinkgorilla/repl/cljs/webly.cljs"],"mappings":";AAQA,AAAA,qCAAA,6CAAAA,lFAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,wEAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,0EAAA,aAAAG,vFAAMD,qFAAQS;AAAd,AAAA,IAAAP,aAAAD;WAAA,AAAAE,4CAAAD,WAAA,IAAA,lEAAmBQ;AAAnB,AACE,oBAAIA;AACF,8BAAA,mFAAA,iEAAA,3KAACC,yKAAyBF;;AAC1B,8BAAA,mFAAA,1GAACE,yKAAyBF;;;;AAH9B,CAAA,6DAAA,7DAAMT;;AAAN;AAAA,CAAA,uDAAA,WAAAI,lEAAMJ;AAAN,AAAA,IAAAK,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAKA,AAAA,qCAAA,6CAAAV,lFAAMkB;AAAN,AAAA,IAAAjB,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAiB,wEAAAd;;;AAAA,AAAA,CAAA,0EAAA,1EAAMc,qFAAUI;AAAhB,AACE,OAACC,8CAAMC,6CAAiBF;;;AAD1B,CAAA,6DAAA,7DAAMJ;;AAAN;AAAA,CAAA,uDAAA,WAAAC,lEAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","pinkgorilla.repl.cljs.webly/dialog","p__50348","vec__50349","cljs.core.nth","seq50346","G__50347","cljs.core/first","cljs.core/next","self__5754__auto__","f","size","re-frame.core/dispatch","pinkgorilla.repl.cljs.webly/notify","seq50352","self__5755__auto__","cljs.core/seq","args","cljs.core.apply","frontend.notifications.core/add-notification"],"sourcesContent":["(ns pinkgorilla.repl.cljs.webly\n  (:require\n   [re-frame.core :as rf]\n   [frontend.notifications.core :refer [add-notification]]))\n\n; this is a clojurescript namespace\n; functions that should be available to all goldly systems\n\n(defn dialog [f & [size]]\n  (if size\n    (rf/dispatch [:modal/open f :small])\n    (rf/dispatch [:modal/open f])))\n\n(defn notify [& args]\n  (apply add-notification args))\n\n\n\n\n\n"],"x_google_ignoreList":[0]}